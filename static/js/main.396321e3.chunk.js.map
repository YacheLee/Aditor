{"version":3,"sources":["../../src/contexts/EditorViewContext.js","../../src/contexts/EditorStateContext.js","../../src/components/Toolbar/HeadingButton/types.js","../../src/utils.js","../../src/components/LinkPopup/ExternalLink.js","../../src/components/LinkPopup/Unlink.js","../../src/components/LinkPopup/ButtonStyle.js","../../src/config.js","../../src/components/LinkPopup/EditLink.js","../../src/components/LinkPopup/LinkPopup.js","../../src/components/Editor/plugins/LinkPlugin.js","../../src/components/Editor/Editor.js","../../src/components/Toolbar/ToolbarButton/ToolbarButton.js","../../src/components/Toolbar/BoldButton/BoldButton.js","../../src/components/Toolbar/ItalicButton/ItalicButton.js","../../src/components/Toolbar/UnderlineButton/UnderlineButton.js","../../src/components/Toolbar/DelButton/DelButton.js","../../src/components/Toolbar/TextColorButton/AButton/AButton.js","../../src/styles/CentralFlexbox.js","../../src/components/Toolbar/TextColorButton/TextColorButton.js","../../src/components/Toolbar/HeadingButton/HeadingList/HeadingList.js","../../src/components/Toolbar/HeadingButton/HeadingButton.js","../../src/components/Toolbar/LinkButton/LinkButton.js","../../src/components/Toolbar/UndoButton/UndoButton.js","../../src/components/Toolbar/RedoButton/RedoButton.js","../../src/components/Toolbar/Toolbar.js","../../src/normaliseValue.js","../../src/index.js","App.js","index.js"],"names":["EditorViewContext","createContext","EditorStateContext","isValue","editorView","typeName","state","type","ref","from","$from","to","markActive","getType","toggleType","e","toggleMark","command","getHeading","selection","tr","blockNodes","headingNodes","node","set","Set","getSelectedHeadingValue","getSchema","name","getMarks","changeColor","color","dispatch","schema","textColor","removeColor","toggleColor","setLinkHref","href","pos","predicates","isTextAtPos","cmd","$pos","linkMark","mark","url","rightBound","linkMarkProps","view","Array","pred","ExternalLink","target","rel","className","style","fontSize","Unlink","onClick","ButtonStyle","styled","EditLink","Root","Separator","LinkPopup","onEditLinkClick","onUnlinkClick","LinkPlugin","props","handleClick","event","hyperlinkElement","s","el","document","matches","closestElement","activeLinkMark","isSelectionInsideLink","$to","isSelectionAroundLink","getActiveLinkMark","setPopoverContent","removeLink","setAnchorEl","window","Editor","value","onChange","useContext","setEditorView","setEditorState","useState","anchorEl","_setAnchorEl","popoverContent","_setPopoverContent","editor","useRef","open","Boolean","init","useCallback","nodes","doc","content","paragraph","group","toDOM","heading","attrs","level","default","defining","parseDOM","tag","text","inline","marks","link","title","inclusive","getAttrs","dom","class","strong","em","u","del","editorState","plugins","history","keymap","redo","dropCursor","gapCursor","autofocus","dispatchTransaction","newState","useEffect","id","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PropTypes","func","Wrapper","ToolbarButton","isActive","BoldButton","component","ItalicButton","UnderlineButton","DelButton","AButton","focusable","viewBox","aria-hidden","fill","d","CentralFlexbox","TextColorButton","$cursor","currentNode","marksWithColor","prevMark","getColor","React","currentTarget","onChangeComplete","hex","DropdownList","Head","hover","label","HeadingList","types","key","parseInt","Center","HeadingButton","setBlockType","changeHeading","LinkButton","disabled","canLinkBeCreatedInRange","allowed","m","currentSlice","getActiveText","textContent","Selection","insertLink","UndoButton","undo","RedoButton","Division","Toolbar","onMouseDown","normaliseValue","DEFAULT_VALUE","PaperWrapper","Aditor","defaultValue","elevation","light","margin","overflow","App","setValue","JSON","stringify","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.396321e3.chunk.js","sourcesContent":["import {createContext} from 'react';\n\nconst EditorViewContext = createContext(null);\n\nexport default EditorViewContext;\n","import {createContext} from 'react';\n\nconst EditorStateContext = createContext(null);\n\nexport default EditorStateContext;\n","export const HEADING_DEFAULT_TYPE = 0;\nexport const HEADING_ONE_TYPE = 1;\nexport const HEADING_TWO_TYPE = 2;\nexport const HEADING_THREE_TYPE = 3;\nexport const HEADING_FOUR_TYPE = 4;\nexport const HEADING_FIVE_TYPE = 5;\nexport const HEADING_SIX_TYPE = 6;\n\nexport default {\n  [HEADING_DEFAULT_TYPE]: 'Normal Text',\n  [HEADING_ONE_TYPE]: 'Heading 1',\n  [HEADING_TWO_TYPE]: 'Heading 2',\n  [HEADING_THREE_TYPE]: 'Heading 3',\n  [HEADING_FOUR_TYPE]: 'Heading 4',\n  [HEADING_FIVE_TYPE]: 'Heading 5',\n  [HEADING_SIX_TYPE]: 'Heading 6'\n};\n","import {setBlockType, toggleMark} from 'prosemirror-commands';\nimport {Selection, TextSelection} from 'prosemirror-state';\nimport {HEADING_DEFAULT_TYPE} from './components/Toolbar/HeadingButton/types';\n\nexport function isValue(editorView, typeName) {\n  return !!markActive(editorView.state, getType(editorView, typeName));\n}\n\nexport function markActive(state, type) {\n  const ref = state.selection;\n  const from = ref.from;\n  const $from = ref.$from;\n  const to = ref.to;\n  const empty = ref.empty;\n  if (empty) {\n    return type.isInSet(state.storedMarks || $from.marks());\n  } else {\n    return state.doc.rangeHasMark(from, to, type);\n  }\n}\n\nexport function toggleType(e, editorView, typeName) {\n  e.preventDefault();\n  editorView.focus();\n  const type = getType(editorView, typeName);\n  const command = toggleMark(type);\n  command(editorView.state, editorView.dispatch, editorView);\n}\n\nexport function getSelectedHeadingValue(headingNodes = []) {\n  const set = new Set(headingNodes.map((node) => node.attrs.level));\n\n  if (set.size === 1) {\n    return set.values().next().value;\n  } else {\n    return HEADING_DEFAULT_TYPE;\n  }\n}\n\nexport function getHeading(editorView) {\n  const { selection, tr } = editorView.state;\n  const { from, to } = selection;\n  const blockNodes = [];\n  const headingNodes = [];\n  tr.doc.nodesBetween(tr.mapping.map(from), tr.mapping.map(to), function (\n    node\n  ) {\n    if (node.isBlock) {\n      blockNodes.push(node);\n      if (node.type.name === 'heading') {\n        headingNodes.push(node);\n      }\n    }\n  });\n  // if all the selected nodes are heading\n  if (blockNodes.length === headingNodes.length) {\n    return getSelectedHeadingValue(headingNodes);\n  } else {\n    return HEADING_DEFAULT_TYPE;\n  }\n}\n\nexport function changeHeading(editorView, level) {\n  editorView.focus();\n  const schema = getSchema(editorView);\n\n  let command;\n  if (level === HEADING_DEFAULT_TYPE) {\n    command = setBlockType(schema.nodes.paragraph);\n  } else {\n    command = setBlockType(schema.nodes.heading, { level });\n  }\n  command(editorView.state, editorView.dispatch);\n}\n\nexport function getSchema(editorView) {\n  return editorView.state.schema;\n}\n\nexport function getMarks(editorView) {\n  return getSchema(editorView).marks;\n}\n\nexport function getType(editorView, name = '') {\n  return getMarks(editorView)[name];\n}\n\nexport function getTopLevelNode(editorView) {\n  return editorView.state.selection.$from.node(1);\n}\n\nexport function getColor(editorView) {\n  const state = editorView.state;\n  const { $from, $to, $cursor } = state.selection;\n  const textColor = state.schema.marks.textColor;\n  let marks = [];\n  if ($cursor) {\n    marks.push(\n      textColor.isInSet(state.storedMarks || $cursor.marks()) || undefined\n    );\n  } else {\n    state.doc.nodesBetween($from.pos, $to.pos, function (currentNode) {\n      if (currentNode.isLeaf) {\n        const mark = textColor.isInSet(currentNode.marks) || undefined;\n        marks.push(mark);\n        return !mark;\n      }\n      return true;\n    });\n  }\n  let prevMark;\n  marks = marks.filter(function (mark) {\n    if (mark && prevMark && mark.attrs.color === prevMark.attrs.color) {\n      return false;\n    }\n    prevMark = mark;\n    return true;\n  });\n  const marksWithColor = marks.filter(function (mark) {\n    return !!mark;\n  });\n  if (\n    marksWithColor.length > 1 ||\n    (marksWithColor.length === 1 && marks.length > 1)\n  ) {\n    return null;\n  }\n  return marksWithColor.length ? marksWithColor[0].attrs.color : 'black';\n}\n\nfunction removeColor() {\n  return (state, dispatch) => {\n    let { schema, selection, tr } = state;\n    const textColor = schema.marks.textColor;\n    const { from, to, $cursor } = selection;\n    if ($cursor) {\n      tr = state.tr.removeStoredMark(textColor);\n    } else {\n      tr = state.tr.removeMark(from, to, textColor);\n    }\n    dispatch(tr.scrollIntoView());\n    return true;\n  };\n}\n\nexport function toggleColor(editorView, color) {\n  const type = getType(editorView, 'textColor');\n  const command = toggleMark(type, { color });\n  command(editorView.state, editorView.dispatch, editorView);\n}\n\nexport function changeColor(editorView, color, state, dispatch) {\n  removeColor()(state, dispatch);\n  toggleColor(editorView, color);\n}\n\nexport function insertLink(from, to, href, text) {\n  return function (state, dispatch) {\n    const { link } = state.schema.marks;\n    if (href.trim()) {\n      const { tr } = state;\n      const textContent = text || href;\n      tr.insertText(textContent, from, to);\n      tr.addMark(from, from + textContent.length, link.create({ href }));\n      tr.setSelection(\n        Selection.near(tr.doc.resolve(from + textContent.length))\n      );\n      if (dispatch) {\n        dispatch(tr);\n      }\n      return true;\n    }\n    return false;\n  };\n}\n\nexport function getActiveText(selection) {\n  if (!selection) return;\n\n  const currentSlice = selection.content();\n  if (currentSlice.size === 0) {\n  } else if (\n    currentSlice.content.childCount === 1 &&\n    currentSlice.content.firstChild &&\n    selection instanceof TextSelection\n  ) {\n    return currentSlice.content.firstChild.textContent;\n  }\n}\n\nexport function canLinkBeCreatedInRange(from, to) {\n  return function (state) {\n    if (!state.doc.rangeHasMark(from, to, state.schema.marks.link)) {\n      const $from = state.doc.resolve(from);\n      const $to = state.doc.resolve(to);\n      const { link } = state.schema.marks;\n      if ($from.parent === $to.parent && $from.parent.isTextblock) {\n        if ($from.parent.type.allowsMarkType(link)) {\n          let allowed = true;\n          state.doc.nodesBetween(from, to, function (node) {\n            allowed =\n              allowed &&\n              !node.marks.some(function (m) {\n                return m.type.excludes(link);\n              });\n            return allowed;\n          });\n          return allowed;\n        }\n      }\n    }\n    return false;\n  };\n}\n\nexport function closestElement(node, s) {\n  let el = node;\n  if (!el) {\n    return null;\n  }\n  if (!document.documentElement || !document.documentElement.contains(el)) {\n    return null;\n  }\n  if (el.closest) {\n    return el.closest(s);\n  }\n  const matches = el.matches ? 'matches' : 'msMatchesSelector';\n  do {\n    if (el[matches] && el[matches](s)) {\n      return el;\n    }\n    el = el.parentElement || el.parentNode;\n  } while (el !== null && el.nodeType === 1);\n  return null;\n}\n\nexport function isSelectionInsideLink(state) {\n  return !!state.doc.type.schema.marks.link.isInSet(\n    state.selection.$from.marks()\n  );\n}\n\nfunction isSelectionAroundLink(state) {\n  const { selection } = state;\n  const { $from, $to } = selection;\n  const node = $from.nodeAfter;\n  return (\n    !!node &&\n    $from.textOffset === 0 &&\n    $to.pos - $from.pos === node.nodeSize &&\n    !!state.doc.type.schema.marks.link.isInSet(node.marks)\n  );\n}\n\nexport function getActiveLinkMark(state) {\n  const $from = state.selection.$from;\n  if (isSelectionInsideLink(state) || isSelectionAroundLink(state)) {\n    const pos = $from.pos - $from.textOffset;\n    const node = state.doc.nodeAt(pos);\n    return node && node.isText ? { node, pos } : undefined;\n  }\n  return undefined;\n}\n\nfunction isTextAtPos(pos) {\n  return function (state) {\n    var node = state.doc.nodeAt(pos);\n    return !!node && node.isText;\n  };\n}\n\nfunction filter(predicates, cmd) {\n  return function (state, dispatch, view) {\n    if (!Array.isArray(predicates)) {\n      predicates = [predicates];\n    }\n    if (\n      predicates.some(function (pred) {\n        return !pred(state, view);\n      })\n    ) {\n      return false;\n    }\n    return cmd(state, dispatch, view) || false;\n  };\n}\n\nexport function setLinkHref(href, pos, to) {\n  return filter(isTextAtPos(pos), function (state, dispatch) {\n    const $pos = state.doc.resolve(pos);\n    const node = state.doc.nodeAt(pos);\n    const linkMark = state.schema.marks.link;\n    const mark = linkMark.isInSet(node.marks);\n    const url = href;\n    if (mark && mark.attrs.href === url) {\n      return false;\n    }\n    const rightBound =\n      to && pos !== to ? to : pos - $pos.textOffset + node.nodeSize;\n    const tr = state.tr.removeMark(pos, rightBound, linkMark);\n    if (href.trim()) {\n      const linkMarkProps = { ...((mark && mark.attrs) || {}), href: url };\n      tr.addMark(pos, rightBound, linkMark.create(linkMarkProps));\n    }\n    if (dispatch) {\n      dispatch(tr);\n    }\n    return true;\n  });\n}\n\nexport function removeLink(pos) {\n  return setLinkHref('', pos);\n}\n","import React from 'react';\nimport {FaExternalLinkAlt} from 'react-icons/fa';\n\nconst FONT_SIZE = 18;\n\nfunction ExternalLink({ url }) {\n  return (\n    <a href={url} target='_blank' rel='noopener noreferrer'>\n      <FaExternalLinkAlt\n        className='fas fa-external-link-alt'\n        style={{ fontSize: FONT_SIZE }}\n      />\n    </a>\n  );\n}\n\nexport default ExternalLink;\n","import React from 'react';\nimport {FaUnlink} from 'react-icons/fa';\n\nconst FONT_SIZE = 18;\n\nconst Unlink = ({ onClick }) => {\n  return (\n    <div onClick={onClick}>\n      <FaUnlink style={{ fontSize: FONT_SIZE }} />\n    </div>\n  );\n};\n\nexport default Unlink;\n","import styled from 'styled-components';\nimport {BLACK_COLOR, BORDER_RADIUS, GREY_COLOR} from '../../config';\n\nconst ButtonStyle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1 0 auto;\n  padding: 0 2px;\n  color: ${BLACK_COLOR};\n  border-radius: ${BORDER_RADIUS};\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${GREY_COLOR};\n  }\n`;\n\nexport default ButtonStyle;\n","export const BLACK_COLOR = '#42526E';\nexport const GREY_COLOR = '#ECEDF0';\nexport const BORDER_RADIUS = 5;\nexport const DEFAULT_COLOR = '#22194D';\nexport const DEFAULT_ICON_FONT_SIZE = '24px';\n","import React from 'react';\n\nconst FONT_SIZE = 18;\n\nconst EditLink = ({ onClick, ...props }) => {\n  return (\n    <div style={{ fontSize: FONT_SIZE }} onClick={onClick}>\n      Edit Link\n    </div>\n  );\n};\n\nexport default EditLink;\n","import React from 'react';\nimport styled from 'styled-components';\nimport ExternalLink from './ExternalLink';\nimport Unlink from './Unlink';\nimport {GREY_COLOR} from '../../config';\nimport ButtonStyle from './ButtonStyle';\nimport EditLink from './EditLink';\n\nconst Root = styled.div`\n  overflow-y: hidden;\n  display: inline-flex;\n  height: 30px;\n  width: 180px;\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n  padding: 4px 8px;\n  z-index: 10;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  a {\n    color: #0052cc;\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n      color: #3b73af;\n    }\n  }\n`;\n\nconst Separator = styled.div`\n  display: flex;\n  background: ${GREY_COLOR};\n  width: 1px;\n  height: 28px;\n  margin: 0 8px;\n`;\n\nfunction LinkPopup({ url, onEditLinkClick, onUnlinkClick }) {\n  return (\n    <Root>\n      <ButtonStyle>\n        <EditLink onClick={onEditLinkClick} />\n      </ButtonStyle>\n      <Separator />\n      <ButtonStyle>\n        <ExternalLink url={url} />\n      </ButtonStyle>\n      <Separator />\n      <ButtonStyle>\n        <Unlink onClick={onUnlinkClick} />\n      </ButtonStyle>\n    </Root>\n  );\n}\n\nexport default LinkPopup;\n","import React from 'react';\nimport {Plugin} from 'prosemirror-state';\nimport {closestElement, getActiveLinkMark, removeLink, setLinkHref} from '../../../utils';\nimport {setAnchorEl, setPopoverContent} from '../Editor';\nimport LinkPopup from '../../LinkPopup';\n\nconst LinkPlugin = new Plugin({\n  props: {\n    handleClick: function (editorView, _pos, event) {\n      const target = event.target;\n      if (target) {\n        const hyperlinkElement = closestElement(target, '.blockLink');\n        if (hyperlinkElement) {\n          const activeLinkMark = getActiveLinkMark(editorView.state);\n          if (activeLinkMark) {\n            const href = hyperlinkElement.getAttribute('href');\n            setPopoverContent(\n              <LinkPopup\n                url={href}\n                onUnlinkClick={() => {\n                  removeLink(activeLinkMark.pos)(\n                    editorView.state,\n                    editorView.dispatch\n                  );\n                  setAnchorEl(null);\n                }}\n                onEditLinkClick={() => {\n                  const url = window.prompt('Enter the URL of the link:', href);\n                  if (!url) return;\n                  setLinkHref(url, activeLinkMark.pos)(\n                    editorView.state,\n                    editorView.dispatch\n                  );\n                  setAnchorEl(null);\n                }}\n              />\n            );\n            setAnchorEl(hyperlinkElement);\n          }\n        }\n      }\n      return false;\n    }\n  }\n});\n\nexport default LinkPlugin;\n","import React, {Fragment, useCallback, useContext, useEffect, useRef, useState} from 'react';\nimport Popover from '@material-ui/core/Popover';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {Schema} from 'prosemirror-model';\nimport {EditorState} from 'prosemirror-state';\nimport {history, redo, undo} from 'prosemirror-history';\nimport {keymap} from 'prosemirror-keymap';\nimport {dropCursor} from 'prosemirror-dropcursor';\nimport {gapCursor} from 'prosemirror-gapcursor';\nimport {baseKeymap} from 'prosemirror-commands';\nimport {EditorView} from 'prosemirror-view';\nimport EditorViewContext from '../../contexts/EditorViewContext';\nimport LinkPlugin from './plugins/LinkPlugin';\nimport EditorStateContext from \"../../contexts/EditorStateContext\";\n\nconst Root = styled.div`\n  position: relative;\n  .ProseMirror {\n    position: relative;\n    min-height: 19px;\n  }\n\n  .ProseMirror-focused {\n    outline: none;\n  }\n\n  .ProseMirror {\n    word-wrap: break-word;\n    white-space: pre-wrap;\n    -webkit-font-variant-ligatures: none;\n    font-variant-ligatures: none;\n    font-feature-settings: 'liga' 0; /* the above doesn't seem to work in Edge */\n  }\n\n  .ProseMirror pre {\n    white-space: pre-wrap;\n  }\n\n  .ProseMirror li {\n    position: relative;\n  }\n\n  .ProseMirror-hideselection *::selection {\n    background: transparent;\n  }\n  .ProseMirror-hideselection *::-moz-selection {\n    background: transparent;\n  }\n  .ProseMirror-hideselection {\n    caret-color: transparent;\n  }\n\n  .ProseMirror-selectednode {\n    outline: 2px solid #8cf;\n  }\n\n  /* Make sure li selections wrap around markers */\n\n  li.ProseMirror-selectednode {\n    outline: none;\n  }\n\n  li.ProseMirror-selectednode:after {\n    content: '';\n    position: absolute;\n    left: -32px;\n    right: -2px;\n    top: -2px;\n    bottom: -2px;\n    border: 2px solid #8cf;\n    pointer-events: none;\n  }\n`;\n\nexport let setAnchorEl = null;\nexport let setPopoverContent = null;\n\nfunction Editor({ value, onChange }) {\n  const { editorView, setEditorView } = useContext(EditorViewContext);\n  const { setEditorState } = useContext(EditorStateContext);\n  const [anchorEl, _setAnchorEl] = useState(null);\n  const [popoverContent, _setPopoverContent] = useState(null);\n  setAnchorEl = _setAnchorEl;\n  setPopoverContent = _setPopoverContent;\n\n  const editor = useRef(null);\n  const id = 'editor_id';\n  const open = Boolean(anchorEl);\n\n  const init = useCallback(() => {\n    if (!editorView) {\n      const schema = new Schema({\n        nodes: {\n          doc: { content: 'block+' },\n          paragraph: {\n            group: 'block',\n            content: 'text*',\n            toDOM(node) {\n              return ['p', 0];\n            }\n          },\n          heading: {\n            attrs: { level: { default: 1 } },\n            content: 'inline*',\n            group: 'block',\n            defining: true,\n            parseDOM: [\n              { tag: 'h1', attrs: { level: 1 } },\n              { tag: 'h2', attrs: { level: 2 } },\n              { tag: 'h3', attrs: { level: 3 } },\n              { tag: 'h4', attrs: { level: 4 } },\n              { tag: 'h5', attrs: { level: 5 } },\n              { tag: 'h6', attrs: { level: 6 } }\n            ],\n            toDOM(node) {\n              return ['h' + node.attrs.level, 0];\n            }\n          },\n          text: {\n            group: 'inline',\n            inline: true\n          }\n        },\n        marks: {\n          link: {\n            attrs: {\n              href: {},\n              title: { default: null }\n            },\n            inclusive: false,\n            parseDOM: [\n              {\n                tag: 'a[href]',\n                getAttrs(dom) {\n                  return {\n                    href: dom.getAttribute('href'),\n                    title: dom.getAttribute('title')\n                  };\n                }\n              }\n            ],\n            toDOM(node) {\n              const { href, title } = node.attrs;\n              return ['a', { href, title, class: 'blockLink' }, 0];\n            }\n          },\n          strong: {\n            parseDOM: [{ tag: 'strong' }, { tag: 'b' }],\n            toDOM: () => ['strong', 0]\n          },\n          em: {\n            parseDOM: [\n              { tag: 'i' },\n              { tag: 'em' },\n              { style: 'font-style=italic' }\n            ],\n            toDOM: () => ['em', 0]\n          },\n          u: {\n            parseDOM: [{ tag: 'u' }],\n            toDOM: () => ['u', 0]\n          },\n          del: {\n            parseDOM: [{ tag: 'del' }],\n            toDOM: () => ['del', 0]\n          },\n          textColor: {\n            attrs: { color: {} },\n            inclusive: true,\n            parseDOM: [\n              {\n                style: 'color',\n                getAttrs: (color) => {\n                  return { color };\n                }\n              }\n            ],\n            toDOM: (mark) => {\n              return [\n                'span',\n                {\n                  style: 'color: ' + mark.attrs.color\n                }\n              ];\n            }\n          }\n        }\n      });\n      const editorState = EditorState.create({\n        schema,\n        doc: schema.nodeFromJSON({\n          type: 'doc',\n          content: value\n        }),\n        plugins: [\n          history(),\n          keymap({ 'Mod-z': undo, 'Mod-y': redo }),\n          keymap(baseKeymap),\n          dropCursor(),\n          gapCursor(),\n          LinkPlugin\n        ]\n      });\n      const editorView = new EditorView(editor.current, {\n        state: editorState,\n        autofocus: true,\n        dispatchTransaction(transaction) {\n          const newState = editorView.state.apply(transaction);\n          editorView.updateState(newState);\n          setEditorState(editorView.state);\n          onChange(newState.toJSON().doc.content);\n        }\n      });\n      setEditorView(editorView);\n      setEditorState(editorView.state);\n    }\n  }, [editorView, setEditorView, value, onChange]);\n\n  useEffect(() => {\n    init();\n  }, [init]);\n\n  return (\n    <Fragment>\n      <Root ref={editor} />\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={() => {\n          _setAnchorEl(null);\n        }}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center'\n        }}\n      >\n        {popoverContent}\n      </Popover>\n    </Fragment>\n  );\n}\n\nEditor.defaultProps = {\n  value: [],\n  onChange: () => {}\n};\n\nEditor.propTypes = {\n  value: PropTypes.array,\n  onChange: PropTypes.func\n};\n\nexport default Editor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {BLACK_COLOR, BORDER_RADIUS, DEFAULT_ICON_FONT_SIZE, GREY_COLOR} from '../../../config';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: ${BORDER_RADIUS}px;\n  background-color: ${(props) => (props.isActive ? BLACK_COLOR : 'white')};\n  color: ${(props) => (props.isActive ? 'white' : BLACK_COLOR)};\n  font-size: ${DEFAULT_ICON_FONT_SIZE};\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${(props) => (props.isActive ? BLACK_COLOR : GREY_COLOR)};\n    color: ${(props) => (props.isActive ? 'white' : BLACK_COLOR)};\n  }\n`;\n\nfunction ToolbarButton({ onClick, isActive, ...props }) {\n  return (\n    <Wrapper isActive={isActive}>\n      <props.component onClick={onClick} />\n    </Wrapper>\n  );\n}\n\nToolbarButton.defaultProps = {\n  isActive: false,\n  onClick: () => {}\n};\n\nToolbarButton.propTypes = {\n  component: PropTypes.elementType.isRequired,\n  isActive: PropTypes.bool,\n  onClick: PropTypes.func\n};\n\nexport default ToolbarButton;\n","import React, {useContext} from 'react';\nimport {MdFormatBold} from 'react-icons/md';\nimport ToolbarButton from '../ToolbarButton';\nimport EditorViewContext from '../../../contexts/EditorViewContext';\nimport {isValue, toggleType} from '../../../utils';\n\nfunction BoldButton() {\n  const { editorView } = useContext(EditorViewContext);\n  const isActive = isValue(editorView, 'strong');\n\n  return (\n    <ToolbarButton\n      component={MdFormatBold}\n      isActive={isActive}\n      onClick={(e) => {\n        toggleType(e, editorView, 'strong');\n      }}\n    />\n  );\n}\n\nexport default BoldButton;\n","import React, {useContext} from 'react';\nimport {MdFormatItalic} from 'react-icons/md';\nimport ToolbarButton from '../ToolbarButton';\nimport EditorViewContext from '../../../contexts/EditorViewContext';\nimport {isValue, toggleType} from '../../../utils';\n\nfunction ItalicButton() {\n  const { editorView } = useContext(EditorViewContext);\n  const isActive = isValue(editorView, 'em');\n\n  return (\n    <ToolbarButton\n      component={MdFormatItalic}\n      isActive={isActive}\n      onClick={(e) => {\n        toggleType(e, editorView, 'em');\n      }}\n    />\n  );\n}\n\nexport default ItalicButton;\n","import React, {useContext} from 'react';\nimport {MdFormatUnderlined} from 'react-icons/md';\nimport ToolbarButton from '../ToolbarButton';\nimport EditorViewContext from '../../../contexts/EditorViewContext';\nimport {isValue, toggleType} from '../../../utils';\n\nfunction UnderlineButton() {\n  const { editorView } = useContext(EditorViewContext);\n  const isActive = isValue(editorView, 'u');\n\n  return (\n    <ToolbarButton\n      component={MdFormatUnderlined}\n      isActive={isActive}\n      onClick={(e) => {\n        toggleType(e, editorView, 'u');\n      }}\n    />\n  );\n}\n\nexport default UnderlineButton;\n","import React, {useContext} from 'react';\nimport {MdStrikethroughS} from 'react-icons/md';\nimport ToolbarButton from '../ToolbarButton';\nimport EditorViewContext from '../../../contexts/EditorViewContext';\nimport {isValue, toggleType} from '../../../utils';\n\nfunction DelButton() {\n  const { editorView } = useContext(EditorViewContext);\n  const isActive = isValue(editorView, 'del');\n\n  return (\n    <ToolbarButton\n      component={MdStrikethroughS}\n      isActive={isActive}\n      onClick={(e) => {\n        toggleType(e, editorView, 'del');\n      }}\n    />\n  );\n}\n\nexport default DelButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Root = styled.svg`\n  height: 28px;\n`;\n\nfunction AButton({ color, onClick }) {\n  return (\n    <Root\n      onClick={onClick}\n      focusable='false'\n      viewBox='0 0 24 24'\n      aria-hidden='true'\n    >\n      <g>\n        <path fill={color} d='M0 20h24v4H0z' />\n        <path d='M11 3L5.5 17h2.25l1.12-3h6.25l1.12 3h2.25L13 3h-2zm-1.38 9L12 5.67 14.38 12H9.62z' />\n      </g>\n    </Root>\n  );\n}\n\nAButton.defaultProps = {\n  color: 'blue',\n  onClick: () => {}\n};\n\nAButton.propTypes = {\n  color: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nexport default AButton;\n","import styled from 'styled-components';\n\nfunction CentralFlexbox(tag) {\n  return styled(tag)`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  `;\n}\n\nCentralFlexbox.defaultProps = {};\n\nCentralFlexbox.propTypes = {};\n\nexport default CentralFlexbox;\n","import React, {Fragment, useContext} from 'react';\nimport {CompactPicker} from 'react-color';\nimport styled from 'styled-components';\nimport Popover from '@material-ui/core/Popover';\nimport AButton from './AButton';\nimport {EditorViewContext} from '../../../contexts';\nimport {changeColor, getColor} from '../../../utils';\nimport CentralFlexbox from '../../../styles/CentralFlexbox';\n\nconst Root = styled(CentralFlexbox('div'))`\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nfunction TextColorButton() {\n  const { editorView } = useContext(EditorViewContext);\n  const color = getColor(editorView);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  return (\n    <Fragment>\n      <Root>\n        <AButton\n          color={color}\n          onClick={({ currentTarget }) => {\n            setAnchorEl(currentTarget);\n          }}\n        />\n      </Root>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={() => {\n          setAnchorEl(null);\n        }}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center'\n        }}\n      >\n        <CompactPicker\n          onChangeComplete={({ hex: value }) => {\n            changeColor(\n              editorView,\n              value,\n              editorView.state,\n              editorView.dispatch\n            );\n            setAnchorEl(null);\n          }}\n        />\n      </Popover>\n    </Fragment>\n  );\n}\n\nexport default TextColorButton;\n","import _ from 'lodash';\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport {GREY_COLOR} from '../../../../config';\nimport types, {HEADING_DEFAULT_TYPE} from '../types';\n\nconst FONT_SIZE = 20;\n\nconst Root = styled.div`\n  padding-top: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  background-color: #f9f9f9;\n  min-width: 100px;\n  min-height: 200px;\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n  z-index: 9999999;\n`;\n\nconst DropdownList = styled.div`\n  color: black;\n  padding: 8px 10px;\n  height: 95%;\n  text-decoration: none;\n  display: block;\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${GREY_COLOR};\n  }\n`;\n\nfunction Head({ fontSize, hover, onClick, label }) {\n  return (\n    <DropdownList hover={hover} style={{ fontSize }} onClick={onClick}>\n      {label}\n    </DropdownList>\n  );\n}\n\nconst HeadingList = ({ onClick, value }) => {\n  return (\n    <Root>\n      {_.keys(types).map((level, index) => {\n        const label = types[level];\n        const hover = level === value;\n        const fontSize = FONT_SIZE - 2 * index;\n\n        return (\n          <Head\n            key={index}\n            label={label}\n            fontSize={fontSize}\n            hover={hover}\n            onClick={() => onClick(level)}\n          />\n        );\n      })}\n    </Root>\n  );\n};\n\nHeadingList.defaultProps = {\n  onClick: () => {},\n  value: HEADING_DEFAULT_TYPE\n};\n\nHeadingList.propTypes = {\n  onClick: PropTypes.func,\n  value: PropTypes.oneOf(_.keys(types).map((e) => parseInt(e)))\n};\n\nexport default HeadingList;\n","import React, {Fragment, useContext} from 'react';\nimport Popover from '@material-ui/core/Popover';\nimport styled from 'styled-components';\nimport {MdArrowDropDown} from 'react-icons/md';\nimport HeadingList from './HeadingList';\nimport {BLACK_COLOR} from '../../../config';\nimport {EditorViewContext} from '../../../contexts';\nimport {changeHeading, getHeading} from '../../../utils';\nimport types from './types';\nimport CentralFlexbox from '../../../styles/CentralFlexbox';\n\nconst Root = styled(CentralFlexbox('div'))`\n  color: ${BLACK_COLOR};\n  &:hover{\n    cursor: pointer;\n`;\n\nconst Center = CentralFlexbox('span');\n\nfunction HeadingButton() {\n  const { editorView } = useContext(EditorViewContext);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  const value = getHeading(editorView);\n  const label = types[value];\n\n  return (\n    <Fragment>\n      <Root\n        onClick={({ currentTarget }) => {\n          setAnchorEl(currentTarget);\n        }}\n      >\n        <Center>{label}</Center>\n        <Center>\n          <MdArrowDropDown />\n        </Center>\n      </Root>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={() => {\n          setAnchorEl(null);\n        }}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center'\n        }}\n      >\n        <div>\n          <HeadingList\n            value={value}\n            onClick={(level) => {\n              changeHeading(editorView, parseInt(level));\n              setAnchorEl(null);\n            }}\n          />\n        </div>\n      </Popover>\n    </Fragment>\n  );\n}\n\nHeadingButton.defaultProps = {};\n\nHeadingButton.propTypes = {};\n\nexport default HeadingButton;\n","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {MdInsertLink as Link} from 'react-icons/md';\nimport {BLACK_COLOR, DEFAULT_ICON_FONT_SIZE} from '../../../config';\nimport {EditorViewContext} from '../../../contexts';\nimport {canLinkBeCreatedInRange, getActiveText, insertLink} from '../../../utils';\nimport CentralFlexbox from '../../../styles/CentralFlexbox';\n\nconst Root = styled(CentralFlexbox('div'))`\n  font-size: ${DEFAULT_ICON_FONT_SIZE};\n  color: ${(props) => (props.disabled ? 'grey' : BLACK_COLOR)};\n\n  &:hover {\n    cursor: ${(props) => (props.disabled ? 'not-allowed' : 'cursor')};\n  }\n`;\n\nfunction LinkButton() {\n  const { editorView } = useContext(EditorViewContext);\n  const disabled = !canLinkBeCreatedInRange(\n    editorView.state.selection.from,\n    editorView.state.selection.to\n  )(editorView.state);\n\n  return (\n    <Root disabled={disabled}>\n      <Link\n        onClick={() => {\n          if (!disabled) {\n            const url = window.prompt('Enter the URL of the link:');\n            if (!url) return;\n\n            const text = getActiveText(editorView.state.selection);\n            const { from, to } = editorView.state.selection;\n            const command = insertLink(from, to, url, text);\n            command(editorView.state, editorView.dispatch);\n          }\n        }}\n      />\n    </Root>\n  );\n}\n\nLinkButton.defaultProps = {\n  onClick: () => {}\n};\n\nLinkButton.propTypes = {\n  onClick: PropTypes.func\n};\n\nexport default LinkButton;\n","import React, {useContext} from 'react';\nimport {MdUndo} from 'react-icons/md';\nimport {undo} from 'prosemirror-history';\nimport EditorViewContext from '../../../contexts/EditorViewContext';\nimport styled from 'styled-components';\nimport {DEFAULT_ICON_FONT_SIZE} from '../../../config';\n\nconst Wrapper = styled(MdUndo)`\n  font-size: ${DEFAULT_ICON_FONT_SIZE};\n  color: ${(props) =>\n    props.disabled ? 'rgba(0, 0, 0, 0.26)' : 'rgba(0, 0, 0, 0.54)'};\n\n  &:hover {\n    cursor: ${(props) => (props.disabled ? 'not-allowed' : 'cursor')};\n  }\n`;\n\nfunction UndoButton() {\n  const { editorView } = useContext(EditorViewContext);\n  const disabled = !undo(editorView.state);\n\n  return (\n    <Wrapper\n      disabled={disabled}\n      onClick={() => {\n        if (!disabled) {\n          undo(editorView.state, editorView.dispatch);\n        }\n      }}\n    />\n  );\n}\n\nexport default UndoButton;\n","import React, {useContext} from 'react';\nimport {redo} from 'prosemirror-history';\nimport EditorViewContext from '../../../contexts/EditorViewContext';\nimport styled from 'styled-components';\nimport {MdRedo} from 'react-icons/md';\nimport {DEFAULT_ICON_FONT_SIZE} from '../../../config';\n\nconst Wrapper = styled(MdRedo)`\n  font-size: ${DEFAULT_ICON_FONT_SIZE};\n  color: ${(props) =>\n    props.disabled ? 'rgba(0, 0, 0, 0.26)' : 'rgba(0, 0, 0, 0.54)'};\n\n  &:hover {\n    cursor: ${(props) => (props.disabled ? 'not-allowed' : 'cursor')};\n  }\n`;\n\nfunction RedoButton() {\n  const { editorView } = useContext(EditorViewContext);\n  const disabled = !redo(editorView.state);\n\n  return (\n    <Wrapper\n      disabled={disabled}\n      onClick={() => {\n        if (!disabled) {\n          redo(editorView.state, editorView.dispatch);\n        }\n      }}\n    />\n  );\n}\n\nexport default RedoButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport BoldButton from './BoldButton';\nimport ItalicButton from './ItalicButton';\nimport UnderlineButton from './UnderlineButton';\nimport DelButton from './DelButton';\nimport TextColorButton from './TextColorButton';\nimport HeadingButton from './HeadingButton';\nimport LinkButton from './LinkButton';\nimport UndoButton from './UndoButton';\nimport RedoButton from './RedoButton';\nimport CentralFlexbox from '../../styles/CentralFlexbox';\n\nconst Root = styled.div`\n  position: sticky;\n  top: 0;\n  background-color: white;\n  z-index: 1;\n  width: 100%;\n  flex-wrap: nowrap;\n  overflow-x: auto;\n  display: flex;\n  flex: 0 0 auto;\n  flex-shrink: 0;\n  padding: 0;\n`;\n\nconst Division = styled(CentralFlexbox('div'))`\n  margin: 12px;\n  width: auto;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nfunction Toolbar() {\n  return (\n    <Root onMouseDown={(e) => e.preventDefault()}>\n      <Division>\n        <UndoButton />\n      </Division>\n      <Division>\n        <RedoButton />\n      </Division>\n      <Division>\n        <HeadingButton />\n      </Division>\n      <Division>\n        <BoldButton />\n      </Division>\n      <Division>\n        <ItalicButton />\n      </Division>\n      <Division>\n        <UnderlineButton />\n      </Division>\n      <Division>\n        <DelButton />\n      </Division>\n      <Division>\n        <TextColorButton />\n      </Division>\n      <Division>\n        <LinkButton />\n      </Division>\n    </Root>\n  );\n}\n\nToolbar.defaultProps = {};\n\nToolbar.propTypes = {};\n\nexport default Toolbar;\n","export default function normaliseValue(value) {\n  const DEFAULT_VALUE = [{ type: 'paragraph' }];\n  if (value === undefined || value === null) {\n    return DEFAULT_VALUE;\n  } else if (Array.isArray(value) && value.length === 0) {\n    return DEFAULT_VALUE;\n  }\n  return value;\n}\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport EditorViewContext from './contexts/EditorViewContext';\nimport EditorStateContext from './contexts/EditorStateContext';\nimport Editor from './components/Editor';\nimport Toolbar from './components/Toolbar';\nimport normaliseValue from './normaliseValue';\n\nconst PaperWrapper = styled(Paper)`\n  padding: 12px;\n`;\n\nfunction Aditor({ defaultValue, onChange }) {\n  const [editorView, setEditorView] = useState(null);\n  const [editorState, setEditorState] = useState(null);\n\n  return (\n    <EditorViewContext.Provider value={{ editorView, setEditorView }}>\n        <EditorStateContext.Provider value={{ editorState, setEditorState }}>\n            <PaperWrapper elevation={3}>\n                {editorView && <Toolbar />}\n                <Divider light />\n                <div style={{ margin: 12, overflow: 'auto' }}>\n                    <Editor value={normaliseValue(defaultValue)} onChange={onChange} />\n                </div>\n            </PaperWrapper>\n        </EditorStateContext.Provider>\n    </EditorViewContext.Provider>\n  );\n}\n\nAditor.defaultProps = {\n  defaultValue: [],\n  onChange: () => {}\n};\n\nAditor.propTypes = {\n  defaultValue: PropTypes.array,\n  onChange: PropTypes.func\n};\n\nexport default Aditor;\n","import React from 'react';\nimport Aditor from 'aditor';\n\nconst App = () => {\n  const [value, setValue] = React.useState([{\"type\":\"heading\",\"attrs\":{\"level\":1},\"content\":[{\"type\":\"text\",\"text\":\"Heading1\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":2},\"content\":[{\"type\":\"text\",\"text\":\"Heading2\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":3},\"content\":[{\"type\":\"text\",\"text\":\"Heading3\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":4},\"content\":[{\"type\":\"text\",\"text\":\"Heading4\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":5},\"content\":[{\"type\":\"text\",\"text\":\"Heading5\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":6},\"content\":[{\"type\":\"text\",\"text\":\"Heading6\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Normal Text\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"strong\"}],\"text\":\"Bold\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"em\"}],\"text\":\"Italic\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"u\"}],\"text\":\"Underline\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"del\"}],\"text\":\"StrikeThrough\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"textColor\",\"attrs\":{\"color\":\"#f44e3b\"}}],\"text\":\"Red\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"link\",\"attrs\":{\"href\":\"https://www.google.com.tw\",\"title\":null}}],\"text\":\"Link\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":1},\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"link\",\"attrs\":{\"href\":\"https://www.google.com.tw\",\"title\":null}},{\"type\":\"strong\"},{\"type\":\"em\"},{\"type\":\"u\"},{\"type\":\"del\"},{\"type\":\"textColor\",\"attrs\":{\"color\":\"#f44e3b\"}}],\"text\":\"All combined\"}]}]);\n\n  return (\n    <div className=\"App\">\n      <Aditor defaultValue={value} onChange={value=>{\n        setValue(value);\n      }} />\n      {JSON.stringify(value)}\n    </div>\n  );\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}