{"version":3,"sources":["../../src/packages/Aditor/PopoverManager.js","../../src/packages/Aditor/components/Popover/Popover.js","../../src/packages/Aditor/components/Popover/useEscClose.js","../../src/packages/Aditor/plugins/config.js","../../src/packages/Aditor/plugins/shared/ToolbarButtonStyle.js","../../src/packages/Aditor/plugins/UndoPlugin/UndoPlugin.js","../../src/packages/Aditor/plugins/RedoPlugin/RedoPlugin.js","../../src/packages/Aditor/plugins/MarkPlugin/utils.js","../../src/packages/Aditor/plugins/shared/ToolbarActiveButtonStyle.js","../../src/packages/Aditor/plugins/MarkPlugin/MarkPlugin.js","../../src/packages/Aditor/plugins/BoldPlugin/mark.js","../../src/packages/Aditor/plugins/BoldPlugin/BoldPlugin.js","../../src/packages/Aditor/plugins/ItalicPlugin/mark.js","../../src/packages/Aditor/plugins/ItalicPlugin/ItalicPlugin.js","../../src/packages/Aditor/plugins/UnderlinePlugin/mark.js","../../src/packages/Aditor/plugins/UnderlinePlugin/UnderlinePlugin.js","../../src/packages/Aditor/plugins/StrikeThroughPlugin/mark.js","../../src/packages/Aditor/plugins/StrikeThroughPlugin/StrikeThroughPlugin.js","../../src/packages/Aditor/plugins/TextColorPlugin/mark.js","../../src/packages/Aditor/plugins/TextColorPlugin/commands.js","../../src/packages/Aditor/plugins/TextColorPlugin/AButton/AButton.js","../../src/packages/Aditor/plugins/TextColorPlugin/TextColorToolbarButton.js","../../src/packages/Aditor/plugins/TextColorPlugin/TextColorPlugin.js","../../src/packages/Aditor/plugins/HeadingPlugin/config.js","../../src/packages/Aditor/plugins/HeadingPlugin/getValue.js","../../src/packages/Aditor/plugins/HeadingPlugin/getSelectedHeadingValue.js","../../src/packages/Aditor/plugins/HeadingPlugin/getLabel.js","../../src/packages/Aditor/plugins/HeadingPlugin/components/HeadingList.js","../../src/packages/Aditor/plugins/HeadingPlugin/components/HeadingToolbarButton.js","../../src/packages/Aditor/plugins/HeadingPlugin/onHeadingClick.js","../../src/packages/Aditor/plugins/HeadingPlugin/HeadingPlugin.js","../../src/packages/Aditor/plugins/LinkPlugin/config.js","../../src/packages/Aditor/plugins/LinkPlugin/mark.js","../../src/packages/Aditor/plugins/LinkPlugin/components/LinkPopover/LinkPopover.js","../../src/packages/Aditor/plugins/LinkPlugin/filter.js","../../src/packages/Aditor/plugins/LinkPlugin/setLinkHref.js","../../src/packages/Aditor/plugins/LinkPlugin/components/LinkEditPopover/LinkEditPopover.js","../../src/packages/Aditor/plugins/LinkPlugin/setLinkText.js","../../src/packages/Aditor/plugins/LinkPlugin/utils.js","../../src/packages/Aditor/plugins/LinkPlugin/onLinkClick.js","../../src/packages/Aditor/plugins/LinkPlugin/getActiveLinkMark.js","../../src/packages/Aditor/plugins/LinkPlugin/components/LinkToolbarButton/insertLink.js","../../src/packages/Aditor/plugins/LinkPlugin/components/LinkToolbarButton/LinkToolbarButton.js","../../src/packages/Aditor/plugins/LinkPlugin/LinkPlugin.js","../../src/packages/Aditor/nodes.js","../../src/packages/Aditor/marks.js","../../src/packages/Aditor/normaliseValue.js","../../src/packages/Aditor/ProseMirrorStyle.js","../../src/packages/Aditor/Aditor.js","../../src/packages/Aditor/plugins/index.js","App.js","index.js"],"names":["PopoverManager","anchorEl","setPopoverAnchorElement","setPopoverContent","setAnchorEl","this","getAnchorEl","closePopover","isTopPopover","Popover","children","open","Boolean","useEffect","event","document","onClickAway","id","onClose","ToolbarButtonStyle","styled","props","constructor","disabled","undo","editorView","ReactDOM","onClick","e","UndoPlugin","toolbarDom","view","handleKeyDown","keydownHandler","update","redo","RedoPlugin","isActive","editorState","mark","state","selection","empty","$from","markActive","ToolbarActiveButtonStyle","MarkPlugin","Icon","markType","attr","hotkey","toggleMark","toolbarButtonDom","toggle","pluginConfig","ToolbarView","strong","parseDOM","tag","getAttrs","node","style","test","value","toDOM","BoldPlugin","em","ItalicPlugin","u","UnderlinePlugin","del","StrikeThroughPlugin","textColor","attrs","color","inclusive","changeColor","tr","schema","dispatch","$cursor","removeColor","type","toggleColor","Root","AButton","focusable","viewBox","aria-hidden","fill","d","TextColorToolbarButton","onChangeComplete","hex","PropTypes","func","marks","$to","currentNode","marksWithColor","prevMark","getColor","TextColorPlugin","PARAGRAPH_VALUE","HEADING_DEFAULT_TYPE","getHeading","to","blockNodes","headingNodes","set","Set","getSelectedHeadingValue","getLabel","DropdownList","Head","label","hover","fontSize","HeadingList","map","level","key","CenterBox","ToolbarButton","HeadingToolbarButton","nodeType","setBlockType","onHeadingClick","getValue","HeadingPlugin","link","href","title","default","dom","class","Paper","LinkPopover","onRemoveLink","className","url","target","rel","onCopyLink","onEditLink","filter","predicates","cmd","Array","pred","setLinkHref","pos","isTextAtPos","$pos","linkMark","rightBound","linkMarkProps","TextFieldContainer","TextFieldInner","Label","TextField","Button","LinkEditPopover","text","_text","_url","button_text","onApply","useState","text_id","_","link_id","htmlFor","autoFocus","onChange","setText","display","setUrl","setLinkText","isLinkAtPos","isMobileView","window","onLinkClick","_pos","hyperlinkElement","isSelectionInsideLink","isSelectionAroundLink","getActiveLinkMark","answered_url","copy","insertLink","from","allowed","m","canLinkBeCreatedInRange","textContent","LinkToolbarButton","isInsertMode","selectedFragment","getSelectedText","getSelectedLink","buttonText","answered_text","LinkPlugin","handleClick","nodes","doc","content","paragraph","group","heading","defining","inline","plugins","spec","prev","cur","normaliseValue","DEFAULT_VALUE","ProseMirrorStyle","Toolbar","Aditor","Error","editor","useRef","toolbar","init","useCallback","_plugins","history","keymap","dropCursor","gapCursor","defaultValue","_editorView","dispatchTransaction","newState","setEditorView","ref","onMouseDown","light","App","React","setValue","JSON","stringify","render","getElementById"],"mappings":"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","file":"static/js/main.18cb22e4.chunk.js","sourcesContent":["const PopoverManager = {\n    anchorEl: null,\n    setPopoverAnchorElement: null,\n    setPopoverContent: null,\n    setAnchorEl: function(anchorEl){\n        this.anchorEl = anchorEl;\n    },\n    getAnchorEl: function(){\n        return this.anchorEl;\n    },\n    closePopover: function(){\n        this.setPopoverAnchorElement(null);\n    },\n    isTopPopover: function(){\n        return this.anchorEl!==null;\n    }\n}\n\nexport default PopoverManager;\n","import React, {Fragment} from 'react';\nimport Popper from '@material-ui/core/Popper';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport useEscClose from './useEscClose';\nimport PopoverManager from '../../PopoverManager';\n\nfunction Popover({id, anchorEl, children}) {\n    const open = Boolean(anchorEl);\n    useEscClose();\n\n    return <ClickAwayListener onClickAway={event=>{\n        if(event.composedPath().indexOf(anchorEl)===-1){\n            PopoverManager.closePopover();\n        }\n    }}>\n        <Popper\n            id={id}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={PopoverManager.closePopover}\n        >\n            <Fragment>\n                {children}\n            </Fragment>\n        </Popper>\n    </ClickAwayListener>\n}\n\nPopover.propTypes = {\n\n};\n\nexport default Popover;\n","import {useEffect} from 'react';\nimport PopoverManager from '../../PopoverManager';\n\nfunction useEscClose(){\n    useEffect(() => {\n        function onKeyDown(event){\n            if (event.key === 'Escape' && PopoverManager.isTopPopover()) {\n                PopoverManager.closePopover();\n            }\n        }\n\n        document.body.addEventListener('keydown', onKeyDown);\n\n        return () => {\n            document.body.removeEventListener('keydown', onKeyDown);\n        };\n    });\n}\n\nexport default useEscClose;\n","export const TOOLBAR_BUTTON_SIZE = 48;\nexport const DEFAULT_FONT_SIZE = '24px';\nexport const BLACK_COLOR = '#42526E';\nexport const GREY_COLOR = '#ECEDF0';\n","import styled from 'styled-components';\nimport {DEFAULT_FONT_SIZE} from '../config';\n\nconst ToolbarButtonStyle = styled.div`\n    font-size: ${DEFAULT_FONT_SIZE};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 12px;\n    color: ${(props) => props.disabled ? 'rgba(0, 0, 0, 0.26)' : ''};\n    &:hover {\n        cursor: ${(props) => (props.disabled ? 'not-allowed' : 'pointer')};\n    }\n`;\n\nexport default ToolbarButtonStyle;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {MdUndo} from \"react-icons/md\";\nimport {undo} from \"prosemirror-history\";\nimport {keydownHandler} from \"prosemirror-keymap\";\nimport {Plugin} from 'prosemirror-state';\nimport ToolbarButtonStyle from '../shared/ToolbarButtonStyle';\n\nclass UndoView{\n    constructor(editorView) {\n        this.dom = document.createElement('div');\n        this.renderReactComponent(editorView);\n    }\n    renderReactComponent(editorView){\n        const disabled = !undo(editorView.state);\n\n        ReactDOM.render(<ToolbarButtonStyle disabled={disabled} onClick={e=>{\n            e.preventDefault();\n            editorView.focus();\n            undo(editorView.state, editorView.dispatch);\n        }}>\n            <MdUndo />\n        </ToolbarButtonStyle>, this.dom);\n    }\n    update(editorView){\n        this.renderReactComponent(editorView);\n    }\n    destroy() { this.dom.remove() }\n}\n\nfunction UndoPlugin(toolbarDom){\n    return new Plugin({\n        view(editorView){\n            const view = new UndoView(editorView, toolbarDom);\n            toolbarDom.append(view.dom);\n            return view;\n        },\n        props: {\n            handleKeyDown: keydownHandler({\n                \"Mod-z\": undo\n            })\n        },\n        update(){\n            return true;\n        }\n    });\n}\n\nexport default UndoPlugin;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {MdRedo} from 'react-icons/md';\nimport {redo} from \"prosemirror-history\";\nimport {keydownHandler} from \"prosemirror-keymap\";\nimport {Plugin} from 'prosemirror-state';\nimport ToolbarButtonStyle from '../shared/ToolbarButtonStyle';\n\nclass RedoView {\n    constructor(editorView) {\n        this.editorView = editorView;\n        this.dom = document.createElement('div');\n        this.renderReactComponent(editorView);\n    }\n\n    renderReactComponent(editorView) {\n        const disabled = !redo(this.editorView.state);\n        ReactDOM.render(<ToolbarButtonStyle disabled={disabled} onClick={e => {\n            e.preventDefault();\n            editorView.focus();\n            redo(editorView.state, editorView.dispatch);\n        }}><MdRedo /></ToolbarButtonStyle>, this.dom);\n    }\n\n    update(editorView) {\n        this.renderReactComponent(editorView);\n    }\n\n    destroy() {\n        this.dom.remove()\n    }\n}\n\nfunction RedoPlugin(toolbarDom) {\n    return new Plugin({\n        view(editorView) {\n            const view = new RedoView(editorView);\n            toolbarDom.append(view.dom);\n            return view;\n        },\n        props: {\n            handleKeyDown: keydownHandler({\n                \"Mod-y\": redo\n            })\n        },\n        update() {\n            return true;\n        }\n    });\n}\n\nexport default RedoPlugin;\n","function markActive(state, mark) {\n    const {selection} = state;\n    const {from, $from, to, empty} = selection;\n    if (empty) {\n        return mark.isInSet(state.storedMarks || $from.marks());\n    } else {\n        return state.doc.rangeHasMark(from, to, mark);\n    }\n}\n\nexport function isActive(editorState, mark) {\n    return !!markActive(editorState, mark);\n}\n","import styled from 'styled-components';\nimport {BLACK_COLOR, DEFAULT_FONT_SIZE, GREY_COLOR, TOOLBAR_BUTTON_SIZE} from '../config';\n\nconst ToolbarActiveButtonStyle = styled.div`\n    font-size: ${DEFAULT_FONT_SIZE};\n    width: ${TOOLBAR_BUTTON_SIZE}px;\n    height: ${TOOLBAR_BUTTON_SIZE}px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n      \n    &:hover{\n        cursor: pointer;\n    }\n\n    svg {\n      background-color: ${(props) => (props.isActive ? BLACK_COLOR : 'white')};\n      color: ${(props) => (props.isActive ? 'white' : BLACK_COLOR)};\n      border-radius: 5px;\n      \n      &:hover{\n        background-color: ${(props) => (props.isActive ? BLACK_COLOR : GREY_COLOR)};\n        color: ${(props) => (props.isActive ? 'white' : BLACK_COLOR)};\n      }\n    }\n`;\n\nexport default ToolbarActiveButtonStyle;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Plugin} from 'prosemirror-state';\nimport {toggleMark} from \"prosemirror-commands\";\nimport {keydownHandler} from \"prosemirror-keymap\";\nimport {isActive} from './utils';\nimport ToolbarActiveButtonStyle from '../shared/ToolbarActiveButtonStyle';\n\nfunction MarkPlugin(toolbarDom, Icon, mark, markType, attr, hotkey){\n    function toggle(editorState, dispatch){\n        toggleMark(editorState.schema.marks[markType], {[attr]: true})(editorState, dispatch);\n    }\n\n    class ToolbarView{\n        constructor(editorView) {\n            this.dom = this.toolbarButtonDom = document.createElement('div');\n            this.renderReactComponent(editorView);\n        }\n        renderReactComponent(editorView){\n            const mark = editorView.state.schema.marks[markType];\n\n            ReactDOM.render(<ToolbarActiveButtonStyle isActive={isActive(editorView.state, mark)}  onClick={e=>{\n                e.preventDefault();\n                editorView.focus();\n                toggle(editorView.state, editorView.dispatch);\n            }}>\n                <Icon />\n            </ToolbarActiveButtonStyle>, this.toolbarButtonDom);\n        }\n        update(editorView){\n            this.renderReactComponent(editorView);\n        }\n        destroy() { this.toolbarButtonDom.remove() }\n    }\n\n    const pluginConfig = {\n        view(editorView){\n            const view = new ToolbarView(editorView);\n            toolbarDom.append(view.dom);\n            return view;\n        },\n        update(){\n            return true;\n        },\n        mark\n    };\n\n    if(!!hotkey){\n        pluginConfig.props = {\n            handleKeyDown: keydownHandler({\n                [hotkey]: toggle\n            })\n        };\n    }\n\n    return new Plugin(pluginConfig);\n}\n\nexport default MarkPlugin;\n","const mark = {\n    strong: {\n        parseDOM: [\n            {tag: \"strong\"},\n            {tag: \"b\", getAttrs: function (node) { return node.style.fontWeight !== \"normal\" && null; }},\n            {style: \"font-weight\", getAttrs: function (value) { return /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null; }}\n        ],\n        toDOM: function toDOM() { return [\"b\", 0] }\n    },\n};\n\nexport default mark;\n","import {MdFormatBold} from 'react-icons/md';\nimport MarkPlugin from '../MarkPlugin';\nimport mark from './mark';\n\nfunction BoldPlugin(toolbarDom){\n    return MarkPlugin(toolbarDom, MdFormatBold, mark, 'strong', 'strong', 'Mod-b')\n}\n\nexport default BoldPlugin;\n","const mark =  {\n    em: {\n        parseDOM: [{tag: \"i\"}, {tag: \"em\"}, {style: \"font-style=italic\"}],\n        toDOM: function toDOM() { return [\"em\", 0] }\n    }\n};\n\nexport default mark;\n","import {MdFormatItalic} from 'react-icons/md';\nimport MarkPlugin from '../MarkPlugin';\nimport mark from './mark';\n\nfunction ItalicPlugin(toolbarDom){\n    return MarkPlugin(toolbarDom, MdFormatItalic, mark, 'em', 'em', 'Mod-i');\n}\nexport default ItalicPlugin;\n","const mark = {\n    u: {\n        parseDOM: [{tag: 'u'}],\n        toDOM: () => ['u', 0]\n    }\n};\n\nexport default mark;\n","import {MdFormatUnderlined} from 'react-icons/md';\nimport MarkPlugin from '../MarkPlugin';\nimport mark from './mark';\n\nfunction UnderlinePlugin(toolbarDom){\n    return MarkPlugin(toolbarDom, MdFormatUnderlined, mark, 'u', 'u', 'Mod-u')\n}\n\nexport default UnderlinePlugin;\n","const mark = {\n    del: {\n        parseDOM: [{tag: 'del'}],\n        toDOM: () => ['del', 0]\n    }\n};\n\nexport default mark;\n","import {MdFormatStrikethrough} from 'react-icons/md';\nimport MarkPlugin from '../MarkPlugin';\nimport mark from './mark';\n\nfunction StrikeThroughPlugin(toolbarDom){\n    return MarkPlugin(toolbarDom, MdFormatStrikethrough, mark, 'del', 'del');\n}\n\nexport default StrikeThroughPlugin;\n","const mark = {\n    textColor: {\n        attrs: { color: {} },\n        inclusive: true,\n        parseDOM: [\n            {\n                style: 'color',\n                getAttrs: (color) => {\n                    return { color };\n                }\n            }\n        ],\n        toDOM: (mark) => {\n            return [\n                'span',\n                {\n                    style: 'color: ' + mark.attrs.color\n                }\n            ];\n        }\n    }\n};\n\nexport default mark;\n","import {toggleMark} from 'prosemirror-commands';\nimport {BLACK_COLOR} from '../config';\n\nconst DEFAULT_COLOR = BLACK_COLOR;\n\nexport function getColor(editorView) {\n    const state = editorView.state;\n    const { $from, $to, $cursor } = state.selection;\n    const textColor = state.schema.marks.textColor;\n    let marks = [];\n    if ($cursor) {\n        marks.push(\n            textColor.isInSet(state.storedMarks || $cursor.marks()) || undefined\n        );\n    } else {\n        state.doc.nodesBetween($from.pos, $to.pos, function (currentNode) {\n            if (currentNode.isLeaf) {\n                const mark = textColor.isInSet(currentNode.marks) || undefined;\n                marks.push(mark);\n                return !mark;\n            }\n            return true;\n        });\n    }\n    let prevMark;\n    marks = marks.filter(function (mark) {\n        if (mark && prevMark && mark.attrs.color === prevMark.attrs.color) {\n            return false;\n        }\n        prevMark = mark;\n        return true;\n    });\n    const marksWithColor = marks.filter(function (mark) {\n        return !!mark;\n    });\n    if (\n        marksWithColor.length > 1 ||\n        (marksWithColor.length === 1 && marks.length > 1)\n    ) {\n        return DEFAULT_COLOR;\n    }\n    return marksWithColor.length ? marksWithColor[0].attrs.color : DEFAULT_COLOR;\n}\n\nfunction removeColor() {\n    return (state, dispatch) => {\n        let { schema, selection, tr } = state;\n        const {textColor} = schema.marks;\n        const { from, to, $cursor } = selection;\n        if ($cursor) {\n            tr = state.tr.removeStoredMark(textColor);\n        } else {\n            tr = state.tr.removeMark(from, to, textColor);\n        }\n        dispatch(tr.scrollIntoView());\n        return true;\n    };\n}\n\nexport function toggleColor(editorView, color) {\n    const type = editorView.state.schema.marks.textColor;\n    return toggleMark(type, { color });\n}\n\nexport function changeColor(editorView, color) {\n    removeColor()(editorView.state, editorView.dispatch);\n    toggleColor(editorView, color)(editorView.state, editorView.dispatch);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {DEFAULT_FONT_SIZE} from '../../config';\n\nconst Root = styled.svg`\n  height: ${DEFAULT_FONT_SIZE};\n`;\n\nfunction AButton({ color, onClick }) {\n  return (\n    <Root\n      onClick={onClick}\n      focusable='false'\n      viewBox='0 0 24 24'\n      aria-hidden='true'\n    >\n      <g>\n        <path fill={color} d='M0 20h24v4H0z' />\n        <path d='M11 3L5.5 17h2.25l1.12-3h6.25l1.12 3h2.25L13 3h-2zm-1.38 9L12 5.67 14.38 12H9.62z' />\n      </g>\n    </Root>\n  );\n}\n\nAButton.defaultProps = {\n  color: 'blue',\n  onClick: () => {}\n};\n\nAButton.propTypes = {\n  color: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nexport default AButton;\n","import React from \"react\";\nimport {CompactPicker} from 'react-color';\nimport {changeColor} from './commands';\nimport AButton from './AButton';\nimport ToolbarButtonStyle from '../shared/ToolbarButtonStyle';\nimport PopoverManager from '../../PopoverManager';\n\nfunction TextColorToolbarButton({editorView, value, toolbarButtonDom}) {\n    return <ToolbarButtonStyle onClick={(event) => {\n        event.preventDefault();\n\n        //toggle\n        if(PopoverManager.getAnchorEl()===toolbarButtonDom){\n            PopoverManager.closePopover();\n        }\n        else{\n            PopoverManager.setPopoverAnchorElement(toolbarButtonDom);\n            PopoverManager.setPopoverContent(\n                <CompactPicker color={value} onChangeComplete={({hex}) => {\n                    if(hex){\n                        changeColor(editorView, hex);\n                        PopoverManager.closePopover();\n                    }\n                }} />\n            );\n        }\n    }}>\n        <AButton color={value}/>\n    </ToolbarButtonStyle>\n}\n\nexport default TextColorToolbarButton;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Plugin} from 'prosemirror-state';\nimport mark from './mark';\nimport {getColor} from './commands';\nimport TextColorToolbarButton from './TextColorToolbarButton';\n\nclass ToolbarView{\n    constructor(editorView) {\n        this.dom = this.toolbarButtonDom = document.createElement('div');\n        this.renderReactComponent(editorView);\n    }\n    renderReactComponent(editorView){\n        const value = getColor(editorView);\n        ReactDOM.render(<TextColorToolbarButton toolbarButtonDom={this.toolbarButtonDom} editorView={editorView} value={value} />, this.toolbarButtonDom);\n    }\n    update(editorView){\n        this.renderReactComponent(editorView);\n    }\n    destroy() { this.toolbarButtonDom.remove() }\n}\n\nfunction TextColorPlugin(toolbarDom){\n    const pluginConfig = {\n        view(editorView){\n            const view = new ToolbarView(editorView);\n            toolbarDom.append(view.dom);\n            return view;\n        },\n        update(){\n            return true;\n        },\n        mark\n    };\n\n    return new Plugin(pluginConfig);\n}\n\nexport default TextColorPlugin;\n","export const PARAGRAPH_VALUE = 0;\nexport const HEADING_DEFAULT_TYPE = PARAGRAPH_VALUE;\n","import getSelectedHeadingValue from './getSelectedHeadingValue';\nimport {PARAGRAPH_VALUE} from './config';\n\nfunction getHeading(editorView) {\n    const { selection, tr } = editorView.state;\n    const { from, to } = selection;\n    const blockNodes = [];\n    const headingNodes = [];\n    tr.doc.nodesBetween(tr.mapping.map(from), tr.mapping.map(to), (node) => {\n        if (node.isBlock) {\n            blockNodes.push(node);\n            if (node.type.name === 'heading') {\n                headingNodes.push(node);\n            }\n        }\n    });\n\n    if (blockNodes.length === headingNodes.length) {\n        return getSelectedHeadingValue(headingNodes);\n    } else {\n        return PARAGRAPH_VALUE;\n    }\n}\n\nexport default getHeading;\n","import {PARAGRAPH_VALUE} from './config';\n\nfunction getSelectedHeadingValue(headingNodes = []) {\n    const set = new Set(headingNodes.map((node) => node.attrs.level));\n\n    if (set.size === 1) {\n        return set.values().next().value;\n    } else {\n        return PARAGRAPH_VALUE;\n    }\n}\n\nexport default getSelectedHeadingValue;\n","import {PARAGRAPH_VALUE} from './config';\n\nfunction getLabel(value){\n    return value === PARAGRAPH_VALUE ? \"Paragraph\" : `Heading ${value}`;\n}\n\nexport default getLabel;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {GREY_COLOR} from '../../config';\nimport {HEADING_DEFAULT_TYPE, PARAGRAPH_VALUE} from '../config';\nimport getLabel from '../getLabel';\n\nconst FONT_SIZE = 20;\n\nconst Root = styled.div`\n  padding-top: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  background-color: #f9f9f9;\n  min-width: 100px;\n  min-height: 200px;\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n  z-index: 9999999;\n`;\n\nconst DropdownList = styled.div`\n  color: black;\n  padding: 8px 10px;\n  height: 95%;\n  text-decoration: none;\n  display: block;\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${GREY_COLOR};\n  }\n`;\n\nfunction Head({ fontSize, hover, onClick, label }) {\n  return (\n    <DropdownList hover={hover} style={{ fontSize }} onClick={onClick}>\n      {label}\n    </DropdownList>\n  );\n}\n\nconst HeadingList = ({ onClick, value }) => {\n  return (\n    <Root>\n      {[PARAGRAPH_VALUE, 1, 2, 3, 4, 5, 6].map((level, index) => {\n        const label = getLabel(level);\n        const hover = level === value;\n        const fontSize = FONT_SIZE - 2 * index;\n\n        return (\n          <Head\n            key={index}\n            label={label}\n            fontSize={fontSize}\n            hover={hover}\n            onClick={() => onClick(level)}\n          />\n        );\n      })}\n    </Root>\n  );\n};\n\nHeadingList.defaultProps = {\n  onClick: () => {},\n  value: HEADING_DEFAULT_TYPE\n};\n\nHeadingList.propTypes = {\n};\n\nexport default HeadingList;\n","import React, {Fragment} from 'react';\nimport styled from 'styled-components';\nimport {MdArrowDropDown} from 'react-icons/md';\nimport {BLACK_COLOR} from '../../config';\nimport getLabel from '../getLabel';\nimport ToolbarButtonStyle from '../../shared/ToolbarButtonStyle';\nimport HeadingList from './HeadingList';\nimport onHeadingClick from '../onHeadingClick';\nimport PopoverManager from '../../../PopoverManager';\n\nconst CenterBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ToolbarButton = styled(ToolbarButtonStyle)`\n  color: ${BLACK_COLOR};\n  margin-right: 0;\n  min-width: 120px;\n  font-size: 20px;\n  &:hover{\n    cursor: pointer;\n  }\n`;\n\nfunction HeadingToolbarButton({editorView, value, toolbarButtonDom}) {\n    const label = getLabel(value);\n\n    return (\n        <Fragment>\n            <ToolbarButton onClick={(e)=>{\n                e.preventDefault();\n\n                //toggle\n                if(PopoverManager.getAnchorEl()===toolbarButtonDom){\n                    PopoverManager.closePopover();\n                }\n                else{\n                    PopoverManager.setPopoverAnchorElement(toolbarButtonDom);\n                    PopoverManager.setPopoverContent(\n                        <HeadingList onClick={(level)=>{\n                            onHeadingClick(editorView, level);\n                            PopoverManager.setPopoverAnchorElement(null);\n                        }} />);\n                }\n            }}>\n                <CenterBox>{label}</CenterBox>\n                <CenterBox>\n                    <MdArrowDropDown/>\n                </CenterBox>\n            </ToolbarButton>\n        </Fragment>\n    );\n}\n\nHeadingToolbarButton.defaultProps = {};\n\nHeadingToolbarButton.propTypes = {};\n\nexport default HeadingToolbarButton;\n","import {PARAGRAPH_VALUE} from './config';\nimport {setBlockType} from 'prosemirror-commands';\n\nfunction onHeadingClick(editorView, level){\n    editorView.focus();\n    if (level === PARAGRAPH_VALUE) {\n        const nodeType = editorView.state.schema.nodes.paragraph;\n        setBlockType( nodeType )(editorView.state, editorView.dispatch);\n    }\n    else{\n        const nodeType = editorView.state.schema.nodes.heading;\n        setBlockType(nodeType, { level })(editorView.state, editorView.dispatch);\n    }\n}\n\nexport default onHeadingClick;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Plugin} from 'prosemirror-state';\nimport getValue from './getValue';\nimport HeadingToolbarButton from './components/HeadingToolbarButton';\n\nclass ToolbarView{\n    constructor(editorView) {\n        this.dom = this.toolbarButtonDom = document.createElement('div');\n        this.renderReactComponent(editorView);\n    }\n    renderReactComponent(editorView){\n        const value = getValue(editorView);\n\n        ReactDOM.render(<HeadingToolbarButton toolbarButtonDom={this.toolbarButtonDom} editorView={editorView} value={value} />\n        , this.dom);\n    }\n    update(editorView){\n        this.renderReactComponent(editorView);\n    }\n    destroy() { this.dom.remove() }\n}\n\nfunction HeadingPlugin(toolbarDom){\n    return new Plugin({\n        view(editorView){\n            const view = new ToolbarView(editorView);\n            toolbarDom.append(view.dom);\n            return view;\n        },\n        update(){\n            return true;\n        }\n    });\n}\n\nexport default HeadingPlugin;\n","export const className = 'blockLink';\nexport const DIALOG_MOBILE_SIZE = 510;\nexport const DIALOG_ASK_URL = 'Enter the URL of the link:';\nexport const DIALOG_ASK_TEXT = 'Enter the TEXT of the link:';\n","import {className} from './config';\n\nconst mark  = {\n    link: {\n        attrs: {\n            href: {},\n            title: { default: null }\n        },\n        inclusive: false,\n        parseDOM: [\n            {\n                tag: 'a[href]',\n                getAttrs(dom) {\n                    return {\n                        href: dom.getAttribute('href'),\n                        title: dom.getAttribute('title')\n                    };\n                }\n            }\n        ],\n        toDOM(node) {\n            const { href, title } = node.attrs;\n            return ['a', { href, title, class: className }, 0];\n        }\n    }\n};\n\nexport default mark;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {AiOutlineGlobal} from 'react-icons/ai';\nimport {FaRegCopy, FaRegEdit, FaUnlink} from 'react-icons/fa';\nimport _Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst Paper = styled(_Paper)`\n  width: 284px;\n  height: 42px;\n  display: flex;\n  align-items: center;\n  padding: 0 6px;\n  \n  .global{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 30px;\n    height: 30px;\n  }\n  \n  a{\n      user-select: none;\n      display: inline-block;\n      width: 160px;\n      max-width: 400px;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      font-weight: 500;\n      text-decoration: none;\n      \n      color: rgb(17, 85, 204);\n      cursor: pointer;\n  }\n  \n  .tools {\n    user-select: none;\n    width: 90px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    \n    span {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 30px;\n      height: 30px;\n      \n      &:hover{\n        background-color: rgba(0, 0, 0, 0.06);\n        border-radius: 50%;\n        cursor: pointer;\n      }\n    }\n  }\n`;\n\nfunction LinkPopover({url, onCopyLink, onEditLink, onRemoveLink}){\n    return <Paper>\n        <span className='global'><AiOutlineGlobal /></span>\n        <Tooltip title={url}>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{url}</a>\n        </Tooltip>\n        <span className='tools'>\n            <Tooltip title=\"Copy link\" onClick={onCopyLink}>\n                <span>\n                    <FaRegCopy />\n                </span>\n            </Tooltip>\n            <Tooltip title=\"Edit link\" onClick={onEditLink}>\n                <span>\n                    <FaRegEdit />\n                </span>\n            </Tooltip>\n            <Tooltip title=\"Remove link\" onClick={onRemoveLink}>\n                <span>\n                    <FaUnlink />\n                </span>\n            </Tooltip>\n        </span>\n    </Paper>\n}\n\nexport default LinkPopover;\n","function filter(predicates, cmd) {\n    return function (state, dispatch, view) {\n        if (!Array.isArray(predicates)) {\n            predicates = [predicates];\n        }\n        if (\n            predicates.some(function (pred) {\n                return !pred(state, view);\n            })\n        ) {\n            return false;\n        }\n        return cmd(state, dispatch, view) || false;\n    };\n}\n\nexport default filter;\n","import filter from './filter';\n\nfunction isTextAtPos(pos) {\n    return function (state) {\n        const node = state.doc.nodeAt(pos);\n        return !!node && node.isText;\n    };\n}\n\nfunction setLinkHref(href, pos, to) {\n    return filter(isTextAtPos(pos), function (state, dispatch) {\n        const $pos = state.doc.resolve(pos);\n        const node = state.doc.nodeAt(pos);\n        const linkMark = state.schema.marks.link;\n        const mark = linkMark.isInSet(node.marks);\n        const url = href;\n        if (mark && mark.attrs.href === url) {\n            return false;\n        }\n        const rightBound =\n            to && pos !== to ? to : pos - $pos.textOffset + node.nodeSize;\n        const tr = state.tr.removeMark(pos, rightBound, linkMark);\n        if (href.trim()) {\n            const linkMarkProps = { ...((mark && mark.attrs) || {}), href: url };\n            tr.addMark(pos, rightBound, linkMark.create(linkMarkProps));\n        }\n        if (dispatch) {\n            dispatch(tr);\n        }\n        return true;\n    });\n}\n\nexport default setLinkHref;\n","import _ from \"lodash\";\nimport React, {useState} from 'react';\nimport styled from 'styled-components';\nimport _Paper from '@material-ui/core/Paper';\n\nconst Paper = styled(_Paper)`\n  width: 462px;\n  height: 146px;\n  position: relative;\n`;\n\nconst TextFieldContainer = styled.div`\n    height: 50%;\n    position: relative;\n    padding: 24px;\n`;\n\nconst TextFieldInner = styled.div`\n    position: relative;\n`;\n\nconst Label = styled.label`\n    position: absolute;\n    top: -8px;\n    left: 12px;\n    \n    background-color: white;\n    box-shadow: 5px 0 0 white, -5px 0 0 white;\n    color: #5f6368;\n    display: inline;\n    font-size: 12px;\n    margin-bottom: 0;\n    max-width: 300px;\n    padding: 0;\n`;\n\nconst TextField = styled.input`\n    box-sizing: content-box;\n    color: #5f6368;\n    height: 32px;\n    margin: 0;\n    width: 294px;\n    \n    border: 1px solid #dadce0;\n    border-radius: 4px;\n    padding: 1px 8px;\n    font-size: 14px;\n    \n    &:focus{\n      color: #3c4043;\n      border: 2px solid #1a73e8;\n      box-shadow: none;\n      padding: 0 7px;\n      outline: none;\n    }\n`;\n\nconst Button = styled.div`\n    user-select: none;\n    cursor: pointer;\n    border: 1px solid transparent;\n    border-radius: 4px;\n    box-shadow: none;\n    box-sizing: border-box;\n    \n    font-weight: 500;\n    font-size: 14px;\n    height: 36px;\n    letter-spacing: 0.25px;\n    line-height: 16px;\n    padding: 9px 24px 11px 24px;\n    background: #1a73e8 none;\n    color: #fff;\n    \n    margin-left: 12px;\n    \n    &:hover{\n      border: 1px solid transparent;\n      background-color: #2b7de9;\n    }\n`;\n\nfunction LinkEditPopover({text: _text=\"\", url: _url=\"\", button_text=\"Apply\", onApply}){\n    const [text, setText] = useState(_text);\n    const [url, setUrl] = useState(_url);\n    const text_id = _.uniqueId('text_')\n    const link_id = _.uniqueId('link_')\n\n    return <Paper>\n        <TextFieldContainer>\n            <TextFieldInner>\n                <Label htmlFor={text_id}>Text</Label>\n                <TextField autoFocus={true} id={text_id} value={text} onChange={e=>setText(e.target.value)} />\n            </TextFieldInner>\n        </TextFieldContainer>\n        <TextFieldContainer>\n            <TextFieldInner style={{display: \"flex\"}}>\n                <Label htmlFor={link_id}>Link</Label>\n                <TextField id={link_id} value={url} onChange={e=>setUrl(e.target.value)} />\n                <Button onClick={()=>onApply({text, url})}>{button_text}</Button>\n            </TextFieldInner>\n        </TextFieldContainer>\n    </Paper>\n}\n\nexport default LinkEditPopover;\n","import filter from './filter';\n\nfunction isLinkAtPos(pos){\n    return (state) => {\n        const node = state.doc.nodeAt(pos);\n        return !!node && state.schema.marks.link.isInSet(node.marks);\n    };\n}\n\nfunction setLinkText(text, pos, to){\n    return filter(isLinkAtPos(pos), (state, dispatch) => {\n        const $pos = state.doc.resolve(pos);\n        const node = state.doc.nodeAt(pos);\n        const mark = state.schema.marks.link.isInSet(node.marks);\n        if (node && text.length > 0 && text !== node.text) {\n            const rightBound = to && pos !== to ? to : pos - $pos.textOffset + node.nodeSize;\n            const {tr} = state;\n\n            tr.insertText(text, pos, rightBound);\n            tr.addMark(pos, pos + text.length, mark);\n\n            if (dispatch) {\n                dispatch(tr);\n            }\n            return true;\n        }\n        return false;\n    });\n}\n\nexport default setLinkText;\n","import {DIALOG_MOBILE_SIZE} from './config';\n\nexport function isMobileView(){\n    return window.screen.width < DIALOG_MOBILE_SIZE;\n}\n","import React from 'react';\nimport copy from 'copy-to-clipboard';\nimport LinkPopover from './components/LinkPopover';\nimport setLinkHref from './setLinkHref';\nimport LinkEditPopover from './components/LinkEditPopover';\nimport setLinkText from './setLinkText';\nimport {className, DIALOG_ASK_URL} from './config';\nimport getActiveLinkMark from './getActiveLinkMark';\nimport PopoverManager from '../../PopoverManager';\nimport {isMobileView} from './utils';\n\nfunction onLinkClick(editorView, _pos, event){\n    const {target} = event;\n    if (target) {\n        const hyperlinkElement = target.closest(`.${className}`);\n        if(hyperlinkElement){\n            const mark = getActiveLinkMark(editorView.state);\n            if(mark){\n                const url = hyperlinkElement.getAttribute('href');\n                const text = hyperlinkElement.innerText;\n                PopoverManager.setPopoverAnchorElement(hyperlinkElement);\n                PopoverManager.setPopoverContent(<LinkPopover\n                    url={url}\n                    onEditLink={()=>{\n                        if (isMobileView()) {\n                            const answered_url = window.prompt(DIALOG_ASK_URL, url);\n                            if (answered_url){\n                                setLinkHref(answered_url, mark.pos)(\n                                    editorView.state,\n                                    editorView.dispatch\n                                );\n                            }\n                        }\n                        else{\n                            PopoverManager.setPopoverContent(<LinkEditPopover\n                                url={url}\n                                text={text}\n                                onApply={({text, url})=>{\n                                    setLinkHref(url, mark.pos)(\n                                        editorView.state,\n                                        editorView.dispatch\n                                    );\n                                    setLinkText(text, mark.pos)(\n                                        editorView.state,\n                                        editorView.dispatch,\n                                    );\n                                    PopoverManager.closePopover();\n                                }}\n                            />);\n                        }\n                    }}\n                    onCopyLink={()=>{\n                        copy(url);\n                        PopoverManager.closePopover();\n                    }}\n                    onRemoveLink={()=>{\n                        setLinkHref('', mark.pos)(\n                            editorView.state,\n                            editorView.dispatch\n                        );\n                        PopoverManager.closePopover();\n                    }}\n                />);\n            }\n        }\n    }\n}\n\nexport default onLinkClick;\n","function isSelectionInsideLink(state) {\n    return !!state.doc.type.schema.marks.link.isInSet(\n        state.selection.$from.marks()\n    );\n}\n\nfunction isSelectionAroundLink(state) {\n    const { selection } = state;\n    const { $from, $to } = selection;\n    const node = $from.nodeAfter;\n    return (\n        !!node &&\n        $from.textOffset === 0 &&\n        $to.pos - $from.pos === node.nodeSize &&\n        !!state.doc.type.schema.marks.link.isInSet(node.marks)\n    );\n}\n\nfunction getActiveLinkMark(state) {\n    const {$from} = state.selection;\n    if (isSelectionInsideLink(state) || isSelectionAroundLink(state)) {\n        const pos = $from.pos - $from.textOffset;\n        const node = state.doc.nodeAt(pos);\n        return node && node.isText ? { node, pos } : undefined;\n    }\n    return undefined;\n}\n\nexport default getActiveLinkMark;\n","import filter from '../../filter';\n\nfunction canLinkBeCreatedInRange(from, to){\n    return (state)=>{\n        if (!state.doc.rangeHasMark(from, to, state.schema.marks.link)) {\n            const $from = state.doc.resolve(from);\n            const $to = state.doc.resolve(to);\n            const link = state.schema.marks.link;\n            if ($from.parent === $to.parent && $from.parent.isTextblock) {\n                if ($from.parent.type.allowsMarkType(link)) {\n                    let allowed = true;\n                    state.doc.nodesBetween(from, to, node => {\n                        allowed = allowed && !node.marks.some(m => m.type.excludes(link));\n                        return allowed;\n                    });\n                    return allowed;\n                }\n            }\n        }\n        return false;\n    }\n}\n\nfunction insertLink( from, href, text){\n    return filter(canLinkBeCreatedInRange(from, from), (state, dispatch) => {\n        const link = state.schema.marks.link;\n        if (href.trim()) {\n            const { tr } = state;\n            const textContent = text || href;\n            tr.insertText(textContent, from, from);\n            tr.addMark( from, from + textContent.length, link.create({ href }));\n\n            if (dispatch) {\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n        return false;\n    });\n}\n\nexport default insertLink;\n","import React from 'react';\nimport {MdInsertLink} from 'react-icons/md';\nimport ToolbarButtonStyle from '../../../shared/ToolbarButtonStyle';\nimport LinkEditPopover from '../LinkEditPopover';\nimport insertLink from './insertLink';\nimport PopoverManager from '../../../../PopoverManager';\nimport setLinkHref from '../../setLinkHref';\nimport setLinkText from '../../setLinkText';\nimport {isMobileView} from '../../utils';\nimport {DIALOG_ASK_TEXT, DIALOG_ASK_URL} from '../../config';\n\nfunction getSelectedText(state, from, to) {\n    const selectedNode = state.doc.cut(from, to);\n    const selectedFragment = selectedNode.content;\n\n    return selectedFragment.content.map(e=>e.textContent).join(\"\");\n}\n\nfunction getSelectedLink(state, pos) {\n    const node = state.doc.nodeAt(pos);\n    const {link} = state.schema.marks;\n    const mark = link.isInSet(node.marks);\n    if(mark && mark.attrs){\n        return mark.attrs.href;\n    }\n    return \"\";\n}\n\nfunction LinkToolbarButton({editorView, toolbarButtonDom}){\n    return <ToolbarButtonStyle onClick={event => {\n        event.preventDefault();\n\n        //toggle\n        if(PopoverManager.getAnchorEl()===toolbarButtonDom){\n            PopoverManager.closePopover();\n        }\n        else{\n            let text = \"\", url = \"\";\n            const {from, to} = editorView.state.selection;\n            const isInsertMode = from === to;\n            if(!isInsertMode){\n                text = getSelectedText(editorView.state, from, to);\n                url = getSelectedLink(editorView.state, from);\n            }\n\n            const buttonText = isInsertMode ? \"Insert\" : \"Update\";\n\n            if(isMobileView()){\n                if(isInsertMode){\n                    const answered_text = window.prompt(DIALOG_ASK_TEXT, text);\n                    if(answered_text){\n                        const answered_url = window.prompt(DIALOG_ASK_URL, url);\n                        if(answered_url){\n                            insertLink(from, answered_url, answered_text)(editorView.state, editorView.dispatch);\n                        }\n                    }\n                }\n                else{\n                    const answered_url = window.prompt(DIALOG_ASK_URL, url);\n                    if(answered_url){\n                        setLinkHref(answered_url, from ,to)(editorView.state, editorView.dispatch);\n                    }\n                }\n            }\n            else{\n                PopoverManager.setPopoverAnchorElement(toolbarButtonDom);\n                PopoverManager.setPopoverContent(\n                    <LinkEditPopover\n                        text={text}\n                        url={url}\n                        button_text={buttonText}\n                        onApply={({text, url}) => {\n                            if(isInsertMode){\n                                insertLink(from, url, text)(editorView.state, editorView.dispatch);\n                            }\n                            else{\n                                setLinkHref(url, from ,to)(editorView.state, editorView.dispatch);\n                                setLinkText(text, from, to)(editorView.state, editorView.dispatch);\n                            }\n                            PopoverManager.closePopover();\n                        }}\n                    />\n                );\n            }\n        }\n    }}>\n        <MdInsertLink/>\n    </ToolbarButtonStyle>\n}\n\nexport default LinkToolbarButton;\n","import React from 'react';\nimport {Plugin} from 'prosemirror-state';\nimport ReactDOM from 'react-dom';\n\nimport mark from './mark';\nimport onLinkClick from './onLinkClick';\nimport LinkToolbarButton from './components/LinkToolbarButton';\n\nimport './LinkPlugin.css';\n\nclass View{\n    constructor(editorView) {\n        this.dom = this.toolbarButtonDom = document.createElement('div');\n        this.renderReactComponent(editorView);\n    }\n    renderReactComponent(editorView){\n        ReactDOM.render(<LinkToolbarButton toolbarButtonDom={this.toolbarButtonDom} editorView={editorView} />, this.toolbarButtonDom);\n    }\n    update(editorView){\n        this.renderReactComponent(editorView);\n    }\n    destroy() { this.toolbarButtonDom.remove() }\n}\n\nfunction LinkPlugin(toolbarDom){\n    return new Plugin({\n        view(editorView){\n            const view = new View(editorView, toolbarDom);\n            toolbarDom.append(view.dom);\n            return view;\n        },\n        update(){\n            return true;\n        },\n        mark,\n        props: {\n            handleClick: onLinkClick\n        }\n    });\n}\n\nexport default LinkPlugin;\n","const nodes = {\n    doc: {\n        content: \"block+\"\n    },\n    paragraph: {\n        content: \"inline*\",\n        group: \"block\",\n        parseDOM: [{tag: \"p\"}],\n        toDOM: function toDOM() {\n            return [\"p\", 0]\n        }\n    },\n    heading: {\n        attrs: { level: { default: 1 } },\n        content: 'inline*',\n        group: 'block',\n        defining: true,\n        parseDOM: [\n            { tag: 'h1', attrs: { level: 1 } },\n            { tag: 'h2', attrs: { level: 2 } },\n            { tag: 'h3', attrs: { level: 3 } },\n            { tag: 'h4', attrs: { level: 4 } },\n            { tag: 'h5', attrs: { level: 5 } },\n            { tag: 'h6', attrs: { level: 6 } }\n        ],\n        toDOM(node) {\n            return ['h' + node.attrs.level, 0];\n        }\n    },\n    text: {\n        group: \"inline\",\n        inline: true\n    },\n};\n\nexport default nodes;\n","function marks(plugins=[]){\n  return plugins.map(({spec}) => spec.mark).filter(e => !!e).reduce((prev, cur)=>{\n      prev = {...prev, ...cur};\n      return prev;\n  }, {});\n}\n\nexport default marks;\n","export default function normaliseValue(value) {\n    const DEFAULT_VALUE = [{ type: 'paragraph' }];\n    if (value === undefined || value === null) {\n        return DEFAULT_VALUE;\n    } else if (Array.isArray(value) && value.length === 0) {\n        return DEFAULT_VALUE;\n    }\n    return value;\n}\n","import styled from 'styled-components';\n\nconst ProseMirrorStyle = styled.div`\n  .ProseMirror {\n    position: relative;\n  }\n\n    .ProseMirror {\n      word-wrap: break-word;\n      white-space: pre-wrap;\n      -webkit-font-variant-ligatures: none;\n      font-variant-ligatures: none;\n    }\n\n.ProseMirror pre {\n  white-space: pre-wrap;\n}\n\n.ProseMirror li {\n  position: relative;\n}\n\n.ProseMirror-hideselection *::selection { background: transparent; }\n.ProseMirror-hideselection *::-moz-selection { background: transparent; }\n.ProseMirror-hideselection { caret-color: transparent; }\n\n.ProseMirror-selectednode {\n  outline: 2px solid #8cf;\n}\n\n/* Make sure li selections wrap around markers */\n\nli.ProseMirror-selectednode {\n  outline: none;\n}\n\nli.ProseMirror-selectednode:after {\n  content: \"\";\n  position: absolute;\n  left: -32px;\n  right: -2px; top: -2px; bottom: -2px;\n  border: 2px solid #8cf;\n  pointer-events: none;\n}\n.ProseMirror-textblock-dropdown {\n  min-width: 3em;\n}\n\n.ProseMirror-menu {\n  margin: 0 -4px;\n  line-height: 1;\n}\n\n.ProseMirror-tooltip .ProseMirror-menu {\n  width: fit-content;\n  white-space: pre;\n}\n\n.ProseMirror-menuitem {\n  margin-right: 3px;\n  display: inline-block;\n}\n\n.ProseMirror-menuseparator {\n  border-right: 1px solid #ddd;\n  margin-right: 3px;\n}\n\n.ProseMirror-menu-dropdown, .ProseMirror-menu-dropdown-menu {\n  font-size: 90%;\n  white-space: nowrap;\n}\n\n.ProseMirror-menu-dropdown {\n  vertical-align: 1px;\n  cursor: pointer;\n  position: relative;\n  padding-right: 15px;\n}\n\n.ProseMirror-menu-dropdown-wrap {\n  padding: 1px 0 1px 4px;\n  display: inline-block;\n  position: relative;\n}\n\n.ProseMirror-menu-dropdown:after {\n  content: \"\";\n  border-left: 4px solid transparent;\n  border-right: 4px solid transparent;\n  border-top: 4px solid currentColor;\n  opacity: .6;\n  position: absolute;\n  right: 4px;\n  top: calc(50% - 2px);\n}\n\n.ProseMirror-menu-dropdown-menu, .ProseMirror-menu-submenu {\n  position: absolute;\n  background: white;\n  color: #666;\n  border: 1px solid #aaa;\n  padding: 2px;\n}\n\n.ProseMirror-menu-dropdown-menu {\n  z-index: 15;\n  min-width: 6em;\n}\n\n.ProseMirror-menu-dropdown-item {\n  cursor: pointer;\n  padding: 2px 8px 2px 4px;\n}\n\n.ProseMirror-menu-dropdown-item:hover {\n  background: #f2f2f2;\n}\n\n.ProseMirror-menu-submenu-wrap {\n  position: relative;\n  margin-right: -4px;\n}\n\n.ProseMirror-menu-submenu-label:after {\n  content: \"\";\n  border-top: 4px solid transparent;\n  border-bottom: 4px solid transparent;\n  border-left: 4px solid currentColor;\n  opacity: .6;\n  position: absolute;\n  right: 4px;\n  top: calc(50% - 4px);\n}\n\n.ProseMirror-menu-submenu {\n  display: none;\n  min-width: 4em;\n  left: 100%;\n  top: -3px;\n}\n\n.ProseMirror-menu-active {\n  background: #eee;\n  border-radius: 4px;\n}\n\n.ProseMirror-menu-active {\n  background: #eee;\n  border-radius: 4px;\n}\n\n.ProseMirror-menu-disabled {\n  opacity: .3;\n}\n\n.ProseMirror-menu-submenu-wrap:hover .ProseMirror-menu-submenu, .ProseMirror-menu-submenu-wrap-active .ProseMirror-menu-submenu {\n  display: block;\n}\n\n.ProseMirror-menubar {\n  border-top-left-radius: inherit;\n  border-top-right-radius: inherit;\n  position: relative;\n  min-height: 1em;\n  color: #666;\n  padding: 1px 6px;\n  top: 0; left: 0; right: 0;\n  border-bottom: 1px solid silver;\n  background: white;\n  z-index: 10;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n  overflow: visible;\n}\n\n.ProseMirror-icon {\n  display: inline-block;\n  line-height: .8;\n  vertical-align: -2px; /* Compensate for padding */\n  padding: 2px 8px;\n  cursor: pointer;\n}\n\n.ProseMirror-menu-disabled.ProseMirror-icon {\n  cursor: default;\n}\n\n.ProseMirror-icon svg {\n  fill: currentColor;\n  height: 1em;\n}\n\n.ProseMirror-icon span {\n  vertical-align: text-top;\n}\n.ProseMirror-gapcursor {\n  display: none;\n  pointer-events: none;\n  position: absolute;\n}\n\n.ProseMirror-gapcursor:after {\n  content: \"\";\n  display: block;\n  position: absolute;\n  top: -2px;\n  width: 20px;\n  border-top: 1px solid black;\n  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;\n}\n\n@keyframes ProseMirror-cursor-blink {\n  to {\n    visibility: hidden;\n  }\n}\n\n.ProseMirror-focused .ProseMirror-gapcursor {\n  display: block;\n}\n/* Add space around the hr to make clicking it easier */\n\n.ProseMirror-example-setup-style hr {\n  padding: 2px 10px;\n  border: none;\n  margin: 1em 0;\n}\n\n.ProseMirror-example-setup-style hr:after {\n  content: \"\";\n  display: block;\n  height: 1px;\n  background-color: silver;\n  line-height: 2px;\n}\n\n.ProseMirror ul, .ProseMirror ol {\n  padding-left: 30px;\n}\n\n.ProseMirror blockquote {\n  padding-left: 1em;\n  border-left: 3px solid #eee;\n  margin-left: 0; margin-right: 0;\n}\n\n.ProseMirror-example-setup-style img {\n  cursor: default;\n}\n\n.ProseMirror-prompt {\n  background: white;\n  padding: 5px 10px 5px 15px;\n  border: 1px solid silver;\n  position: fixed;\n  border-radius: 3px;\n  z-index: 11;\n  box-shadow: -.5px 2px 5px rgba(0, 0, 0, .2);\n}\n\n.ProseMirror-prompt h5 {\n  margin: 0;\n  font-weight: normal;\n  font-size: 100%;\n  color: #444;\n}\n\n.ProseMirror-prompt input[type=\"text\"],\n.ProseMirror-prompt textarea {\n  background: #eee;\n  border: none;\n  outline: none;\n}\n\n.ProseMirror-prompt input[type=\"text\"] {\n  padding: 0 4px;\n}\n\n.ProseMirror-prompt-close {\n  position: absolute;\n  left: 2px; top: 1px;\n  color: #666;\n  border: none; background: transparent; padding: 0;\n}\n\n.ProseMirror-prompt-close:after {\n  content: \"âœ•\";\n  font-size: 12px;\n}\n\n.ProseMirror-invalid {\n  background: #ffc;\n  border: 1px solid #cc7;\n  border-radius: 4px;\n  padding: 5px 10px;\n  position: absolute;\n  min-width: 10em;\n}\n\n.ProseMirror-prompt-buttons {\n  margin-top: 5px;\n  display: none;\n}\n#editor, .editor {\n  background: white;\n  color: black;\n  background-clip: padding-box;\n  border-radius: 4px;\n  border: 2px solid rgba(0, 0, 0, 0.2);\n  padding: 5px 0;\n  margin-bottom: 23px;\n}\n\n.ProseMirror p:first-child,\n.ProseMirror h1:first-child,\n.ProseMirror h2:first-child,\n.ProseMirror h3:first-child,\n.ProseMirror h4:first-child,\n.ProseMirror h5:first-child,\n.ProseMirror h6:first-child {\n  margin-top: 10px;\n}\n\n.ProseMirror {\n  padding: 4px 8px 4px 24px;\n  line-height: 1.2;\n  outline: none;\n}\n\n.ProseMirror p { margin-bottom: 1em }\n\n`;\nexport default ProseMirrorStyle;\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport {Schema} from 'prosemirror-model';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {EditorState} from \"prosemirror-state\";\nimport {EditorView} from \"prosemirror-view\";\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Popover from './components/Popover';\nimport plugins from \"./plugins\";\nimport nodes from \"./nodes\";\nimport marks from \"./marks\";\nimport PopoverManager from './PopoverManager';\nimport normaliseValue from './normaliseValue';\nimport ProseMirrorStyle from './ProseMirrorStyle';\n\nconst Toolbar = styled.div`\n  padding: 4px 8px 4px 14px;\n  position: sticky;\n  top: 0;\n  background-color: white;\n  z-index: 1;\n  width: 100%;\n  flex-wrap: nowrap;\n  overflow-x: auto;\n  display: flex;\n  flex: 0 0 auto;\n  flex-shrink: 0;\n`;\n\nfunction Aditor({id, defaultValue, onChange}) {\n    if(!id){\n        throw new Error('The id is required to use Aditor')\n    }\n    const editor = useRef(null);\n    const toolbar = useRef(null);\n    const [editorView, setEditorView] = useState(null);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [popoverContent, setPopoverContent] = useState(null);\n\n    PopoverManager.setPopoverAnchorElement = setAnchorEl;\n    PopoverManager.setPopoverContent = setPopoverContent;\n    PopoverManager.setAnchorEl(anchorEl);\n\n    const init = useCallback(()=>{\n        if(!editorView){\n            const _plugins = plugins(toolbar.current);\n            const schema = new Schema({ nodes, marks: marks(_plugins) });\n            const doc = schema.nodeFromJSON({\n                type: 'doc',\n                content: normaliseValue(defaultValue)\n            });\n            const state = EditorState.create({\n                doc,\n                plugins: _plugins\n            });\n            const _editorView = new EditorView(editor.current, {\n                state,\n                dispatchTransaction(transaction) {\n                    const newState = _editorView.state.apply(transaction);\n                    _editorView.updateState(newState);\n                    onChange(newState.toJSON().doc.content);\n                }\n            });\n            setEditorView(_editorView);\n        }\n    }, [defaultValue, editorView]);\n\n    useEffect(() => {\n        init();\n    }, [init]);\n\n    return (\n        <CssBaseline>\n            <Paper>\n                <Toolbar ref={toolbar} onMouseDown={e=>e.preventDefault()} />\n                <Divider light />\n                <ProseMirrorStyle ref={editor} />\n                {\n                    editorView && <Popover id={`popover_${id}`} anchorEl={anchorEl}>\n                        {popoverContent}\n                    </Popover>\n                }\n            </Paper>\n        </CssBaseline>\n    );\n}\n\nAditor.defaultProps = {\n    defaultValue: [],\n    onChange: ()=>{}\n};\n\nAditor.propTypes = {\n    id: PropTypes.string.isRequired,\n    defaultValue: PropTypes.array,\n    onChange: PropTypes.func\n};\n\nexport default Aditor;\n","import {history} from \"prosemirror-history\";\nimport {keymap} from 'prosemirror-keymap';\nimport {baseKeymap} from 'prosemirror-commands';\nimport {dropCursor} from 'prosemirror-dropcursor';\nimport {gapCursor} from 'prosemirror-gapcursor';\nimport UndoPlugin from \"./UndoPlugin\";\nimport RedoPlugin from \"./RedoPlugin\";\nimport BoldPlugin from \"./BoldPlugin\";\nimport ItalicPlugin from './ItalicPlugin';\nimport UnderlinePlugin from './UnderlinePlugin';\nimport StrikeThroughPlugin from './StrikeThroughPlugin';\nimport TextColorPlugin from './TextColorPlugin';\nimport HeadingPlugin from './HeadingPlugin';\nimport LinkPlugin from './LinkPlugin';\n\nfunction plugins(toolbarDom){\n    return [\n        history(),\n        keymap(baseKeymap),\n        dropCursor(),\n        gapCursor(),\n        UndoPlugin(toolbarDom),\n        RedoPlugin(toolbarDom),\n        HeadingPlugin(toolbarDom),\n        BoldPlugin(toolbarDom),\n        ItalicPlugin(toolbarDom),\n        UnderlinePlugin(toolbarDom),\n        StrikeThroughPlugin(toolbarDom),\n        TextColorPlugin(toolbarDom),\n        LinkPlugin(toolbarDom),\n    ];\n}\n\nexport default plugins;\n","import React from 'react';\nimport Aditor from 'aditor';\n\nconst App = () => {\n  const [value, setValue] = React.useState([{\"type\":\"heading\",\"attrs\":{\"level\":1},\"content\":[{\"type\":\"text\",\"text\":\"Heading1\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":2},\"content\":[{\"type\":\"text\",\"text\":\"Heading2\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":3},\"content\":[{\"type\":\"text\",\"text\":\"Heading3\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":4},\"content\":[{\"type\":\"text\",\"text\":\"Heading4\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":5},\"content\":[{\"type\":\"text\",\"text\":\"Heading5\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":6},\"content\":[{\"type\":\"text\",\"text\":\"Heading6\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Normal Text\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"strong\"}],\"text\":\"Bold\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"em\"}],\"text\":\"Italic\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"u\"}],\"text\":\"Underline\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"del\"}],\"text\":\"StrikeThrough\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"textColor\",\"attrs\":{\"color\":\"#f44e3b\"}}],\"text\":\"Red\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"link\",\"attrs\":{\"href\":\"https://www.google.com.tw\",\"title\":null}}],\"text\":\"Link\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":1},\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"link\",\"attrs\":{\"href\":\"https://www.google.com.tw\",\"title\":null}},{\"type\":\"strong\"},{\"type\":\"em\"},{\"type\":\"u\"},{\"type\":\"del\"},{\"type\":\"textColor\",\"attrs\":{\"color\":\"#f44e3b\"}}],\"text\":\"All combined\"}]}]);\n\n  return (\n    <div className=\"App\">\n      <Aditor id=\"aditor\" defaultValue={value} onChange={value=>{\n        setValue(value);\n      }} />\n      {JSON.stringify(value)}\n    </div>\n  );\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}