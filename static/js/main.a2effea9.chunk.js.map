{"version":3,"sources":["../../src/packages/Aditor/PopoverManager.js","../../src/packages/Aditor/components/Popover/Popover.js","../../src/packages/Aditor/components/Popover/useEscClose.js","../../src/packages/Aditor/plugins/HighlightPlugin/HighlightPlugin.js","../../src/packages/Aditor/plugins/config.js","../../src/packages/Aditor/plugins/shared/ToolbarButtonStyle.js","../../src/packages/Aditor/plugins/UndoPlugin/UndoPlugin.js","../../src/packages/Aditor/plugins/RedoPlugin/RedoPlugin.js","../../src/packages/Aditor/plugins/shared/ToolbarActiveButtonStyle.js","../../src/packages/Aditor/plugins/MarkPlugin/utils.js","../../src/packages/Aditor/plugins/MarkPlugin/MarkPlugin.js","../../src/packages/Aditor/plugins/BoldPlugin/mark.js","../../src/packages/Aditor/plugins/BoldPlugin/BoldPlugin.js","../../src/packages/Aditor/plugins/ItalicPlugin/mark.js","../../src/packages/Aditor/plugins/ItalicPlugin/ItalicPlugin.js","../../src/packages/Aditor/plugins/UnderlinePlugin/mark.js","../../src/packages/Aditor/plugins/UnderlinePlugin/UnderlinePlugin.js","../../src/packages/Aditor/plugins/StrikeThroughPlugin/mark.js","../../src/packages/Aditor/plugins/StrikeThroughPlugin/StrikeThroughPlugin.js","../../src/packages/Aditor/plugins/TextColorPlugin/mark.js","../../src/packages/Aditor/plugins/TextColorPlugin/commands.js","../../src/packages/Aditor/plugins/TextColorPlugin/AButton/AButton.js","../../src/packages/Aditor/plugins/TextColorPlugin/TextColorToolbarButton.js","../../src/packages/Aditor/plugins/TextColorPlugin/TextColorPlugin.js","../../src/packages/Aditor/plugins/HeadingPlugin/config.js","../../src/packages/Aditor/plugins/HeadingPlugin/getValue.js","../../src/packages/Aditor/plugins/HeadingPlugin/getSelectedHeadingValue.js","../../src/packages/Aditor/plugins/HeadingPlugin/getLabel.js","../../src/packages/Aditor/plugins/HeadingPlugin/components/HeadingList.js","../../src/packages/Aditor/plugins/HeadingPlugin/components/HeadingToolbarButton.js","../../src/packages/Aditor/plugins/HeadingPlugin/onHeadingClick.js","../../src/packages/Aditor/plugins/HeadingPlugin/HeadingPlugin.js","../../src/packages/Aditor/plugins/LinkPlugin/mark.js","../../src/packages/Aditor/plugins/LinkPlugin/components/LinkPopover/LinkPopover.js","../../src/packages/Aditor/plugins/LinkPlugin/filter.js","../../src/packages/Aditor/plugins/LinkPlugin/setLinkHref.js","../../src/packages/Aditor/plugins/LinkPlugin/components/LinkEditPopover/LinkEditPopover.js","../../src/packages/Aditor/plugins/LinkPlugin/setLinkText.js","../../src/packages/Aditor/plugins/LinkPlugin/utils.js","../../src/packages/Aditor/plugins/LinkPlugin/config.js","../../src/packages/Aditor/plugins/LinkPlugin/onLinkClick.js","../../src/packages/Aditor/plugins/LinkPlugin/getActiveLinkMark.js","../../src/packages/Aditor/plugins/LinkPlugin/components/LinkToolbarButton/insertLink.js","../../src/packages/Aditor/plugins/LinkPlugin/components/LinkToolbarButton/LinkToolbarButton.js","../../src/packages/Aditor/plugins/LinkPlugin/LinkPlugin.js","../../src/packages/Aditor/plugins/CursorPlugin/CursorPlugin.js","../../src/packages/Aditor/nodes.js","../../src/packages/Aditor/marks.js","../../src/packages/Aditor/normaliseValue.js","../../src/packages/Aditor/ProseMirrorStyle.js","../../src/packages/Aditor/Aditor.js","../../src/packages/Aditor/plugins/index.js","App.js","index.js"],"names":["PopoverManager","editorView","anchorEl","setPopoverAnchorElement","setPopoverContent","setEditorView","this","setAnchorEl","getAnchorEl","closePopover","isTopPopover","Popover","children","open","Boolean","useEffect","event","document","onClickAway","id","onClose","key","ToolbarButtonStyle","styled","props","constructor","renderReactComponent","disabled","undo","ReactDOM","onClick","e","update","destroy","UndoPlugin","toolbarDom","view","handleKeyDown","keydownHandler","redo","RedoPlugin","ToolbarActiveButtonStyle","isActive","editorState","mark","state","selection","empty","$from","markActive","MarkPlugin","Icon","markType","attr","hotkey","toggleMark","toolbarButtonDom","toggle","pluginConfig","ToolbarView","strong","parseDOM","tag","getAttrs","node","style","test","value","toDOM","BoldPlugin","em","ItalicPlugin","u","UnderlinePlugin","del","StrikeThroughPlugin","textColor","attrs","color","inclusive","changeColor","tr","schema","dispatch","$cursor","removeColor","type","toggleColor","Root","AButton","focusable","viewBox","aria-hidden","fill","d","TextColorToolbarButton","onChangeComplete","hex","PropTypes","func","marks","$to","currentNode","marksWithColor","prevMark","getColor","TextColorPlugin","PARAGRAPH_VALUE","HEADING_DEFAULT_TYPE","getHeading","to","blockNodes","headingNodes","set","Set","getSelectedHeadingValue","getLabel","DropdownList","Head","label","hover","fontSize","HeadingList","map","level","CenterBox","ToolbarButton","HeadingToolbarButton","nodeType","setBlockType","onHeadingClick","getValue","HeadingPlugin","link","href","title","default","dom","class","styles","Paper","LeftContainer","MiddleContainer","HyperlinkElement","RightContainer","LinkPopover","onRemoveLink","url","target","rel","onCopyLink","onEditLink","filter","predicates","cmd","Array","pred","setLinkHref","pos","isTextAtPos","$pos","linkMark","rightBound","linkMarkProps","TextFieldContainer","TextFieldInner","Label","TextField","Button","LinkEditPopover","text","_text","_url","buttonText","onApply","useState","textId","_","linkId","htmlFor","autoFocus","onChange","setText","paddingTop","display","setUrl","setLinkText","isLinkAtPos","isMobileView","window","onLinkClick","_pos","hyperlinkElement","isSelectionInsideLink","isSelectionAroundLink","getActiveLinkMark","answeredUrl","copy","insertLink","from","allowed","m","canLinkBeCreatedInRange","textContent","LinkToolbarButton","isInsertMode","selectedFragment","getSelectedText","getSelectedLink","answeredText","LinkPlugin","handleClick","pluginKey","getCursorDecoration","doc","position","span","getNodeSpellCheckDecoration","decoration","spellcheck","nodes","content","paragraph","group","heading","defining","inline","plugins","spec","prev","cur","normaliseValue","DEFAULT_VALUE","ProseMirrorStyle","Toolbar","Aditor","Error","editor","useRef","toolbar","init","useCallback","_plugins","DecorationSet","apply","data","mapping","decorations","getState","handleDOMEvents","blur","focus","highlightDecoration","history","keymap","dropCursor","gapCursor","defaultValue","_editorView","dispatchTransaction","newState","ref","onMouseDown","light","App","React","setValue","className","JSON","stringify","render","getElementById"],"mappings":"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","file":"static/js/main.a2effea9.chunk.js","sourcesContent":["const PopoverManager = {\n  editorView: null,\n  anchorEl: null,\n  setPopoverAnchorElement: null,\n  setPopoverContent: null,\n\n  setEditorView: function (editorView) {\n    this.editorView = editorView;\n  },\n  setAnchorEl: function (anchorEl) {\n    this.anchorEl = anchorEl;\n  },\n  getAnchorEl: function () {\n    return this.anchorEl;\n  },\n  closePopover: function () {\n    this.setPopoverAnchorElement(null);\n    this.editorView.focus();\n  },\n  isTopPopover: function () {\n    return this.anchorEl !== null;\n  }\n};\n\nexport default PopoverManager;\n","import React, { Fragment } from 'react';\nimport Popper from '@material-ui/core/Popper';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport PopoverManager from '../../PopoverManager';\nimport useEscClose from './useEscClose';\n\nfunction Popover({ id, anchorEl, children }) {\n  const open = Boolean(anchorEl);\n  useEscClose();\n\n  return (\n    <ClickAwayListener\n      onClickAway={(event) => {\n        if (event.composedPath().indexOf(anchorEl) === -1) {\n          PopoverManager.closePopover();\n        }\n      }}\n    >\n      <Popper\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={PopoverManager.closePopover}\n      >\n        <Fragment>{children}</Fragment>\n      </Popper>\n    </ClickAwayListener>\n  );\n}\n\nPopover.propTypes = {};\n\nexport default Popover;\n","import { useEffect } from 'react';\nimport PopoverManager from '../../PopoverManager';\n\nfunction useEscClose() {\n  useEffect(() => {\n    function onKeyDown(event) {\n      if (event.key === 'Escape' && PopoverManager.isTopPopover()) {\n        PopoverManager.closePopover();\n      }\n    }\n\n    document.body.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      document.body.removeEventListener('keydown', onKeyDown);\n    };\n  });\n}\n\nexport default useEscClose;\n","import { Plugin, PluginKey } from 'prosemirror-state';\nimport { Decoration, DecorationSet } from 'prosemirror-view';\nimport styles from './HighlightPlugin.module.css';\n\nconst key = new PluginKey('HighlightPlugin');\nconst DECORATION_ID = 'HighlightDecoration_id';\n\nfunction getDecoration(from, to) {\n  return Decoration.inline(\n    from,\n    to,\n    { class: styles.highlight },\n    { id: DECORATION_ID }\n  );\n}\n\nfunction HighlightPlugin() {\n  return new Plugin({\n    key,\n    state: {\n      init() {\n        return DecorationSet.empty;\n      },\n      apply(tr, set) {\n        const data = tr.getMeta(key);\n\n        if (!data) return set;\n\n        const { selection, doc, mapping } = tr;\n        set = set.map(mapping, doc);\n\n        if (data.type === 'open') {\n          set = set.add(doc, [getDecoration(selection.from, selection.to)]);\n        } else if (data.type === 'close') {\n          const highlightDecoration = set.find(\n            null,\n            null,\n            (e) => e.id === DECORATION_ID\n          );\n          set = set.remove(highlightDecoration);\n        }\n\n        return set;\n      }\n    },\n    props: {\n      decorations(state) {\n        return this.getState(state);\n      },\n      handleDOMEvents: {\n        blur: function (editorView) {\n          editorView.dispatch(\n            editorView.state.tr.setMeta(key, { type: 'open' })\n          );\n          return false;\n        },\n        focus: function (editorView) {\n          editorView.dispatch(\n            editorView.state.tr.setMeta(key, { type: 'close' })\n          );\n          return false;\n        }\n      }\n    }\n  });\n}\n\nexport default HighlightPlugin;\n","export const TOOLBAR_BUTTON_SIZE = 48;\nexport const DEFAULT_FONT_SIZE = '24px';\nexport const BLACK_COLOR = '#42526E';\nexport const GREY_COLOR = '#ECEDF0';\n","import styled from 'styled-components';\nimport { DEFAULT_FONT_SIZE } from '../config';\n\nconst ToolbarButtonStyle = styled.div`\n  font-size: ${DEFAULT_FONT_SIZE};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 12px;\n  color: ${(props) => (props.disabled ? 'rgba(0, 0, 0, 0.26)' : '')};\n  &:hover {\n    cursor: ${(props) => (props.disabled ? 'not-allowed' : 'pointer')};\n  }\n`;\n\nexport default ToolbarButtonStyle;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MdUndo } from 'react-icons/md';\nimport { undo } from 'prosemirror-history';\nimport { keydownHandler } from 'prosemirror-keymap';\nimport { Plugin } from 'prosemirror-state';\nimport ToolbarButtonStyle from '../shared/ToolbarButtonStyle';\n\nclass UndoView {\n  constructor(editorView) {\n    this.dom = document.createElement('div');\n    this.renderReactComponent(editorView);\n  }\n\n  renderReactComponent(editorView) {\n    const disabled = !undo(editorView.state);\n\n    ReactDOM.render(\n      <ToolbarButtonStyle\n        disabled={disabled}\n        onClick={(e) => {\n          e.preventDefault();\n          editorView.focus();\n          undo(editorView.state, editorView.dispatch);\n        }}\n      >\n        <MdUndo />\n      </ToolbarButtonStyle>,\n      this.dom\n    );\n  }\n\n  update(editorView) {\n    this.renderReactComponent(editorView);\n  }\n\n  destroy() {\n    this.dom.remove();\n  }\n}\n\nfunction UndoPlugin(toolbarDom) {\n  return new Plugin({\n    view(editorView) {\n      const view = new UndoView(editorView, toolbarDom);\n      toolbarDom.append(view.dom);\n      return view;\n    },\n    props: {\n      handleKeyDown: keydownHandler({\n        'Mod-z': undo\n      })\n    },\n    update() {\n      return true;\n    }\n  });\n}\n\nexport default UndoPlugin;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MdRedo } from 'react-icons/md';\nimport { redo } from 'prosemirror-history';\nimport { keydownHandler } from 'prosemirror-keymap';\nimport { Plugin } from 'prosemirror-state';\nimport ToolbarButtonStyle from '../shared/ToolbarButtonStyle';\n\nclass RedoView {\n  constructor(editorView) {\n    this.editorView = editorView;\n    this.dom = document.createElement('div');\n    this.renderReactComponent(editorView);\n  }\n\n  renderReactComponent(editorView) {\n    const disabled = !redo(this.editorView.state);\n    ReactDOM.render(\n      <ToolbarButtonStyle\n        disabled={disabled}\n        onClick={(e) => {\n          e.preventDefault();\n          editorView.focus();\n          redo(editorView.state, editorView.dispatch);\n        }}\n      >\n        <MdRedo />\n      </ToolbarButtonStyle>,\n      this.dom\n    );\n  }\n\n  update(editorView) {\n    this.renderReactComponent(editorView);\n  }\n\n  destroy() {\n    this.dom.remove();\n  }\n}\n\nfunction RedoPlugin(toolbarDom) {\n  return new Plugin({\n    view(editorView) {\n      const view = new RedoView(editorView);\n      toolbarDom.append(view.dom);\n      return view;\n    },\n    props: {\n      handleKeyDown: keydownHandler({\n        'Mod-y': redo\n      })\n    },\n    update() {\n      return true;\n    }\n  });\n}\n\nexport default RedoPlugin;\n","import styled from 'styled-components';\nimport {\n  BLACK_COLOR,\n  DEFAULT_FONT_SIZE,\n  GREY_COLOR,\n  TOOLBAR_BUTTON_SIZE\n} from '../config';\n\nconst ToolbarActiveButtonStyle = styled.div`\n  font-size: ${DEFAULT_FONT_SIZE};\n  width: ${TOOLBAR_BUTTON_SIZE}px;\n  height: ${TOOLBAR_BUTTON_SIZE}px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  svg {\n    background-color: ${(props) => (props.isActive ? BLACK_COLOR : 'white')};\n    color: ${(props) => (props.isActive ? 'white' : BLACK_COLOR)};\n    border-radius: 5px;\n\n    &:hover {\n      background-color: ${(props) =>\n        props.isActive ? BLACK_COLOR : GREY_COLOR};\n      color: ${(props) => (props.isActive ? 'white' : BLACK_COLOR)};\n    }\n  }\n`;\n\nexport default ToolbarActiveButtonStyle;\n","function markActive(state, mark) {\n  const { selection } = state;\n  const { from, $from, to, empty } = selection;\n  if (empty) {\n    return mark.isInSet(state.storedMarks || $from.marks());\n  } else {\n    return state.doc.rangeHasMark(from, to, mark);\n  }\n}\n\nexport function isActive(editorState, mark) {\n  return !!markActive(editorState, mark);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Plugin } from 'prosemirror-state';\nimport { toggleMark } from 'prosemirror-commands';\nimport { keydownHandler } from 'prosemirror-keymap';\nimport ToolbarActiveButtonStyle from '../shared/ToolbarActiveButtonStyle';\nimport { isActive } from './utils';\n\nfunction MarkPlugin(toolbarDom, Icon, mark, markType, attr, hotkey) {\n  function toggle(editorState, dispatch) {\n    toggleMark(editorState.schema.marks[markType], { [attr]: true })(\n      editorState,\n      dispatch\n    );\n  }\n\n  class ToolbarView {\n    constructor(editorView) {\n      this.dom = this.toolbarButtonDom = document.createElement('div');\n      this.renderReactComponent(editorView);\n    }\n\n    renderReactComponent(editorView) {\n      const mark = editorView.state.schema.marks[markType];\n\n      ReactDOM.render(\n        <ToolbarActiveButtonStyle\n          isActive={isActive(editorView.state, mark)}\n          onClick={(e) => {\n            e.preventDefault();\n            editorView.focus();\n            toggle(editorView.state, editorView.dispatch);\n          }}\n        >\n          <Icon />\n        </ToolbarActiveButtonStyle>,\n        this.toolbarButtonDom\n      );\n    }\n\n    update(editorView) {\n      this.renderReactComponent(editorView);\n    }\n\n    destroy() {\n      this.toolbarButtonDom.remove();\n    }\n  }\n\n  const pluginConfig = {\n    view(editorView) {\n      const view = new ToolbarView(editorView);\n      toolbarDom.append(view.dom);\n      return view;\n    },\n    update() {\n      return true;\n    },\n    mark\n  };\n\n  if (hotkey) {\n    pluginConfig.props = {\n      handleKeyDown: keydownHandler({\n        [hotkey]: toggle\n      })\n    };\n  }\n\n  return new Plugin(pluginConfig);\n}\n\nexport default MarkPlugin;\n","const mark = {\n  strong: {\n    parseDOM: [\n      { tag: 'strong' },\n      {\n        tag: 'b',\n        getAttrs: function (node) {\n          return node.style.fontWeight !== 'normal' && null;\n        }\n      },\n      {\n        style: 'font-weight',\n        getAttrs: function (value) {\n          return /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null;\n        }\n      }\n    ],\n    toDOM: function toDOM() {\n      return ['b', 0];\n    }\n  }\n};\n\nexport default mark;\n","import { MdFormatBold } from 'react-icons/md';\nimport MarkPlugin from '../MarkPlugin';\nimport mark from './mark';\n\nfunction BoldPlugin(toolbarDom) {\n  return MarkPlugin(\n    toolbarDom,\n    MdFormatBold,\n    mark,\n    'strong',\n    'strong',\n    'Mod-b'\n  );\n}\n\nexport default BoldPlugin;\n","const mark = {\n  em: {\n    parseDOM: [{ tag: 'i' }, { tag: 'em' }, { style: 'font-style=italic' }],\n    toDOM: function toDOM() {\n      return ['em', 0];\n    }\n  }\n};\n\nexport default mark;\n","import { MdFormatItalic } from 'react-icons/md';\nimport MarkPlugin from '../MarkPlugin';\nimport mark from './mark';\n\nfunction ItalicPlugin(toolbarDom) {\n  return MarkPlugin(toolbarDom, MdFormatItalic, mark, 'em', 'em', 'Mod-i');\n}\nexport default ItalicPlugin;\n","const mark = {\n  u: {\n    parseDOM: [{ tag: 'u' }],\n    toDOM: () => ['u', 0]\n  }\n};\n\nexport default mark;\n","import { MdFormatUnderlined } from 'react-icons/md';\nimport MarkPlugin from '../MarkPlugin';\nimport mark from './mark';\n\nfunction UnderlinePlugin(toolbarDom) {\n  return MarkPlugin(toolbarDom, MdFormatUnderlined, mark, 'u', 'u', 'Mod-u');\n}\n\nexport default UnderlinePlugin;\n","const mark = {\n  del: {\n    parseDOM: [{ tag: 'del' }],\n    toDOM: () => ['del', 0]\n  }\n};\n\nexport default mark;\n","import { MdFormatStrikethrough } from 'react-icons/md';\nimport MarkPlugin from '../MarkPlugin';\nimport mark from './mark';\n\nfunction StrikeThroughPlugin(toolbarDom) {\n  return MarkPlugin(toolbarDom, MdFormatStrikethrough, mark, 'del', 'del');\n}\n\nexport default StrikeThroughPlugin;\n","const mark = {\n  textColor: {\n    attrs: { color: {} },\n    inclusive: true,\n    parseDOM: [\n      {\n        style: 'color',\n        getAttrs: (color) => {\n          return { color };\n        }\n      }\n    ],\n    toDOM: (mark) => {\n      return [\n        'span',\n        {\n          style: 'color: ' + mark.attrs.color\n        }\n      ];\n    }\n  }\n};\n\nexport default mark;\n","import { toggleMark } from 'prosemirror-commands';\nimport { BLACK_COLOR } from '../config';\n\nconst DEFAULT_COLOR = BLACK_COLOR;\n\nexport function getColor(editorView) {\n  const state = editorView.state;\n  const { $from, $to, $cursor } = state.selection;\n  const textColor = state.schema.marks.textColor;\n  let marks = [];\n  if ($cursor) {\n    marks.push(\n      textColor.isInSet(state.storedMarks || $cursor.marks()) || undefined\n    );\n  } else {\n    state.doc.nodesBetween($from.pos, $to.pos, function (currentNode) {\n      if (currentNode.isLeaf) {\n        const mark = textColor.isInSet(currentNode.marks) || undefined;\n        marks.push(mark);\n        return !mark;\n      }\n      return true;\n    });\n  }\n  let prevMark;\n  marks = marks.filter(function (mark) {\n    if (mark && prevMark && mark.attrs.color === prevMark.attrs.color) {\n      return false;\n    }\n    prevMark = mark;\n    return true;\n  });\n  const marksWithColor = marks.filter(function (mark) {\n    return !!mark;\n  });\n  if (\n    marksWithColor.length > 1 ||\n    (marksWithColor.length === 1 && marks.length > 1)\n  ) {\n    return DEFAULT_COLOR;\n  }\n  return marksWithColor.length ? marksWithColor[0].attrs.color : DEFAULT_COLOR;\n}\n\nfunction removeColor() {\n  return (state, dispatch) => {\n    let { schema, selection, tr } = state;\n    const { textColor } = schema.marks;\n    const { from, to, $cursor } = selection;\n    if ($cursor) {\n      tr = state.tr.removeStoredMark(textColor);\n    } else {\n      tr = state.tr.removeMark(from, to, textColor);\n    }\n    dispatch(tr.scrollIntoView());\n    return true;\n  };\n}\n\nexport function toggleColor(editorView, color) {\n  const type = editorView.state.schema.marks.textColor;\n  return toggleMark(type, { color });\n}\n\nexport function changeColor(editorView, color) {\n  removeColor()(editorView.state, editorView.dispatch);\n  toggleColor(editorView, color)(editorView.state, editorView.dispatch);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { DEFAULT_FONT_SIZE } from '../../config';\n\nconst Root = styled.svg`\n  height: ${DEFAULT_FONT_SIZE};\n`;\n\nfunction AButton({ color, onClick }) {\n  return (\n    <Root\n      onClick={onClick}\n      focusable='false'\n      viewBox='0 0 24 24'\n      aria-hidden='true'\n    >\n      <g>\n        <path fill={color} d='M0 20h24v4H0z' />\n        <path d='M11 3L5.5 17h2.25l1.12-3h6.25l1.12 3h2.25L13 3h-2zm-1.38 9L12 5.67 14.38 12H9.62z' />\n      </g>\n    </Root>\n  );\n}\n\nAButton.defaultProps = {\n  color: 'blue',\n  onClick: () => {}\n};\n\nAButton.propTypes = {\n  color: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nexport default AButton;\n","import React from 'react';\nimport { CompactPicker } from 'react-color';\nimport ToolbarButtonStyle from '../shared/ToolbarButtonStyle';\nimport PopoverManager from '../../PopoverManager';\nimport { changeColor } from './commands';\nimport AButton from './AButton';\n\nfunction TextColorToolbarButton({ editorView, value, toolbarButtonDom }) {\n  return (\n    <ToolbarButtonStyle\n      onClick={(event) => {\n        event.preventDefault();\n\n        // toggle\n        if (PopoverManager.getAnchorEl() === toolbarButtonDom) {\n          PopoverManager.closePopover();\n        } else {\n          PopoverManager.setPopoverAnchorElement(toolbarButtonDom);\n          PopoverManager.setPopoverContent(\n            <CompactPicker\n              color={value}\n              onChangeComplete={({ hex }) => {\n                if (hex) {\n                  changeColor(editorView, hex);\n                  PopoverManager.closePopover();\n                }\n              }}\n            />\n          );\n        }\n      }}\n    >\n      <AButton color={value} />\n    </ToolbarButtonStyle>\n  );\n}\n\nexport default TextColorToolbarButton;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Plugin } from 'prosemirror-state';\nimport mark from './mark';\nimport { getColor } from './commands';\nimport TextColorToolbarButton from './TextColorToolbarButton';\n\nclass ToolbarView {\n  constructor(editorView) {\n    this.dom = this.toolbarButtonDom = document.createElement('div');\n    this.renderReactComponent(editorView);\n  }\n\n  renderReactComponent(editorView) {\n    const value = getColor(editorView);\n    ReactDOM.render(\n      <TextColorToolbarButton\n        toolbarButtonDom={this.toolbarButtonDom}\n        editorView={editorView}\n        value={value}\n      />,\n      this.toolbarButtonDom\n    );\n  }\n\n  update(editorView) {\n    this.renderReactComponent(editorView);\n  }\n\n  destroy() {\n    this.toolbarButtonDom.remove();\n  }\n}\n\nfunction TextColorPlugin(toolbarDom) {\n  const pluginConfig = {\n    view(editorView) {\n      const view = new ToolbarView(editorView);\n      toolbarDom.append(view.dom);\n      return view;\n    },\n    update() {\n      return true;\n    },\n    mark\n  };\n\n  return new Plugin(pluginConfig);\n}\n\nexport default TextColorPlugin;\n","export const PARAGRAPH_VALUE = 0;\nexport const HEADING_DEFAULT_TYPE = PARAGRAPH_VALUE;\n","import getSelectedHeadingValue from './getSelectedHeadingValue';\nimport { PARAGRAPH_VALUE } from './config';\n\nfunction getHeading(editorView) {\n  const { selection, tr } = editorView.state;\n  const { from, to } = selection;\n  const blockNodes = [];\n  const headingNodes = [];\n  tr.doc.nodesBetween(tr.mapping.map(from), tr.mapping.map(to), (node) => {\n    if (node.isBlock) {\n      blockNodes.push(node);\n      if (node.type.name === 'heading') {\n        headingNodes.push(node);\n      }\n    }\n  });\n\n  if (blockNodes.length === headingNodes.length) {\n    return getSelectedHeadingValue(headingNodes);\n  } else {\n    return PARAGRAPH_VALUE;\n  }\n}\n\nexport default getHeading;\n","import { PARAGRAPH_VALUE } from './config';\n\nfunction getSelectedHeadingValue(headingNodes = []) {\n  const set = new Set(headingNodes.map((node) => node.attrs.level));\n\n  if (set.size === 1) {\n    return set.values().next().value;\n  } else {\n    return PARAGRAPH_VALUE;\n  }\n}\n\nexport default getSelectedHeadingValue;\n","import { PARAGRAPH_VALUE } from './config';\n\nfunction getLabel(value) {\n  return value === PARAGRAPH_VALUE ? 'Paragraph' : `Heading ${value}`;\n}\n\nexport default getLabel;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { GREY_COLOR } from '../../config';\nimport { HEADING_DEFAULT_TYPE, PARAGRAPH_VALUE } from '../config';\nimport getLabel from '../getLabel';\n\nconst FONT_SIZE = 20;\n\nconst Root = styled.div`\n  padding-top: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  background-color: #f9f9f9;\n  min-width: 100px;\n  min-height: 200px;\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n  z-index: 9999999;\n`;\n\nconst DropdownList = styled.div`\n  color: black;\n  padding: 8px 10px;\n  height: 95%;\n  text-decoration: none;\n  display: block;\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${GREY_COLOR};\n  }\n`;\n\nfunction Head({ fontSize, hover, onClick, label }) {\n  return (\n    <DropdownList hover={hover} style={{ fontSize }} onClick={onClick}>\n      {label}\n    </DropdownList>\n  );\n}\n\nconst HeadingList = ({ onClick, value }) => {\n  return (\n    <Root>\n      {[PARAGRAPH_VALUE, 1, 2, 3, 4, 5, 6].map((level, index) => {\n        const label = getLabel(level);\n        const hover = level === value;\n        const fontSize = FONT_SIZE - 2 * index;\n\n        return (\n          <Head\n            key={index}\n            label={label}\n            fontSize={fontSize}\n            hover={hover}\n            onClick={() => onClick(level)}\n          />\n        );\n      })}\n    </Root>\n  );\n};\n\nHeadingList.defaultProps = {\n  onClick: () => {},\n  value: HEADING_DEFAULT_TYPE\n};\n\nHeadingList.propTypes = {};\n\nexport default HeadingList;\n","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { MdArrowDropDown } from 'react-icons/md';\nimport { BLACK_COLOR } from '../../config';\nimport getLabel from '../getLabel';\nimport ToolbarButtonStyle from '../../shared/ToolbarButtonStyle';\n\nimport onHeadingClick from '../onHeadingClick';\nimport PopoverManager from '../../../PopoverManager';\nimport HeadingList from './HeadingList';\n\nconst CenterBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ToolbarButton = styled(ToolbarButtonStyle)`\n  color: ${BLACK_COLOR};\n  margin-right: 0;\n  min-width: 140px;\n  font-size: 20px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nfunction HeadingToolbarButton({ editorView, value, toolbarButtonDom }) {\n  const label = getLabel(value);\n\n  return (\n    <Fragment>\n      <ToolbarButton\n        onClick={(e) => {\n          e.preventDefault();\n\n          // toggle\n          if (PopoverManager.getAnchorEl() === toolbarButtonDom) {\n            PopoverManager.closePopover();\n          } else {\n            PopoverManager.setPopoverAnchorElement(toolbarButtonDom);\n            PopoverManager.setPopoverContent(\n              <HeadingList\n                onClick={(level) => {\n                  onHeadingClick(editorView, level);\n                  PopoverManager.setPopoverAnchorElement(null);\n                }}\n              />\n            );\n          }\n        }}\n      >\n        <CenterBox>{label}</CenterBox>\n        <CenterBox>\n          <MdArrowDropDown />\n        </CenterBox>\n      </ToolbarButton>\n    </Fragment>\n  );\n}\n\nHeadingToolbarButton.defaultProps = {};\n\nHeadingToolbarButton.propTypes = {};\n\nexport default HeadingToolbarButton;\n","import { setBlockType } from 'prosemirror-commands';\nimport { PARAGRAPH_VALUE } from './config';\n\nfunction onHeadingClick(editorView, level) {\n  editorView.focus();\n  if (level === PARAGRAPH_VALUE) {\n    const nodeType = editorView.state.schema.nodes.paragraph;\n    setBlockType(nodeType)(editorView.state, editorView.dispatch);\n  } else {\n    const nodeType = editorView.state.schema.nodes.heading;\n    setBlockType(nodeType, { level })(editorView.state, editorView.dispatch);\n  }\n}\n\nexport default onHeadingClick;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Plugin } from 'prosemirror-state';\nimport getValue from './getValue';\nimport HeadingToolbarButton from './components/HeadingToolbarButton';\n\nclass ToolbarView {\n  constructor(editorView) {\n    this.dom = this.toolbarButtonDom = document.createElement('div');\n    this.renderReactComponent(editorView);\n  }\n\n  renderReactComponent(editorView) {\n    const value = getValue(editorView);\n\n    ReactDOM.render(\n      <HeadingToolbarButton\n        toolbarButtonDom={this.toolbarButtonDom}\n        editorView={editorView}\n        value={value}\n      />,\n      this.dom\n    );\n  }\n\n  update(editorView) {\n    this.renderReactComponent(editorView);\n  }\n\n  destroy() {\n    this.dom.remove();\n  }\n}\n\nfunction HeadingPlugin(toolbarDom) {\n  return new Plugin({\n    view(editorView) {\n      const view = new ToolbarView(editorView);\n      toolbarDom.append(view.dom);\n      return view;\n    },\n    update() {\n      return true;\n    }\n  });\n}\n\nexport default HeadingPlugin;\n","import styles from './LinkPlugin.module.css';\n\nconst mark = {\n  link: {\n    attrs: {\n      href: {},\n      title: { default: null }\n    },\n    inclusive: false,\n    parseDOM: [\n      {\n        tag: 'a[href]',\n        getAttrs(dom) {\n          return {\n            href: dom.getAttribute('href'),\n            title: dom.getAttribute('title')\n          };\n        }\n      }\n    ],\n    toDOM(node) {\n      const { href, title } = node.attrs;\n      return ['a', { href, title, class: styles.blockLink }, 0];\n    }\n  }\n};\n\nexport default mark;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { AiOutlineGlobal } from 'react-icons/ai';\nimport { FaRegCopy, FaRegEdit, FaUnlink } from 'react-icons/fa';\nimport _Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst Paper = styled(_Paper)`\n  width: 284px;\n  height: 42px;\n  display: flex;\n  align-items: center;\n  padding: 0 6px;\n`;\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 30px;\n  height: 30px;\n`;\n\nconst MiddleContainer = styled.div`\n  height: 30px;\n  display: flex;\n  align-items: center;\n`;\n\nconst HyperlinkElement = styled.a`\n  width: 160px;\n  height: 18px;\n  user-select: none;\n  display: inline-block;\n  max-width: 400px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  font-weight: 500;\n  text-decoration: none;\n  font-size: 13px;\n\n  color: rgb(17, 85, 204);\n  cursor: pointer;\n`;\n\nconst RightContainer = styled.div`\n  width: 90px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  user-select: none;\n\n  span {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 30px;\n    height: 30px;\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.06);\n      border-radius: 50%;\n      cursor: pointer;\n    }\n  }\n`;\n\nfunction LinkPopover({ url, onCopyLink, onEditLink, onRemoveLink }) {\n  return (\n    <Paper>\n      <LeftContainer>\n        <AiOutlineGlobal />\n      </LeftContainer>\n      <MiddleContainer>\n        <Tooltip title={url}>\n          <HyperlinkElement\n            target='_blank'\n            rel='noopener noreferrer'\n            href={url}\n          >\n            {url}\n          </HyperlinkElement>\n        </Tooltip>\n      </MiddleContainer>\n      <RightContainer>\n        <Tooltip title='Copy link' onClick={onCopyLink}>\n          <span>\n            <FaRegCopy />\n          </span>\n        </Tooltip>\n        <Tooltip title='Edit link' onClick={onEditLink}>\n          <span>\n            <FaRegEdit />\n          </span>\n        </Tooltip>\n        <Tooltip title='Remove link' onClick={onRemoveLink}>\n          <span>\n            <FaUnlink />\n          </span>\n        </Tooltip>\n      </RightContainer>\n    </Paper>\n  );\n}\n\nexport default LinkPopover;\n","function filter(predicates, cmd) {\n  return function (state, dispatch, view) {\n    if (!Array.isArray(predicates)) {\n      predicates = [predicates];\n    }\n    if (\n      predicates.some(function (pred) {\n        return !pred(state, view);\n      })\n    ) {\n      return false;\n    }\n    return cmd(state, dispatch, view) || false;\n  };\n}\n\nexport default filter;\n","import filter from './filter';\n\nfunction isTextAtPos(pos) {\n  return function (state) {\n    const node = state.doc.nodeAt(pos);\n    return !!node && node.isText;\n  };\n}\n\nfunction setLinkHref(href, pos, to) {\n  return filter(isTextAtPos(pos), function (state, dispatch) {\n    const $pos = state.doc.resolve(pos);\n    const node = state.doc.nodeAt(pos);\n    const linkMark = state.schema.marks.link;\n    const mark = linkMark.isInSet(node.marks);\n    const url = href;\n    if (mark && mark.attrs.href === url) {\n      return false;\n    }\n    const rightBound =\n      to && pos !== to ? to : pos - $pos.textOffset + node.nodeSize;\n    const tr = state.tr.removeMark(pos, rightBound, linkMark);\n    if (href.trim()) {\n      const linkMarkProps = { ...((mark && mark.attrs) || {}), href: url };\n      tr.addMark(pos, rightBound, linkMark.create(linkMarkProps));\n    }\n    if (dispatch) {\n      dispatch(tr);\n    }\n    return true;\n  });\n}\n\nexport default setLinkHref;\n","import _ from 'lodash';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport _Paper from '@material-ui/core/Paper';\n\nconst Paper = styled(_Paper)`\n  width: 462px;\n  height: 146px;\n  position: relative;\n`;\n\nconst TextFieldContainer = styled.div`\n  height: 50%;\n  position: relative;\n  padding: 24px;\n`;\n\nconst TextFieldInner = styled.div`\n  position: relative;\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  top: -8px;\n  left: 12px;\n\n  background-color: white;\n  box-shadow: 5px 0 0 white, -5px 0 0 white;\n  color: #5f6368;\n  display: inline;\n  font-size: 12px;\n  margin-bottom: 0;\n  max-width: 300px;\n  padding: 0;\n`;\n\nconst TextField = styled.input`\n  box-sizing: content-box;\n  color: #5f6368;\n  height: 32px;\n  margin: 0;\n  width: 294px;\n\n  border: 1px solid #dadce0;\n  border-radius: 4px;\n  padding: 1px 8px;\n  font-size: 14px;\n\n  &:focus {\n    color: #3c4043;\n    border: 2px solid #1a73e8;\n    box-shadow: none;\n    padding: 0 7px;\n    outline: none;\n  }\n`;\n\nconst Button = styled.div`\n  user-select: none;\n  cursor: pointer;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  box-shadow: none;\n  box-sizing: border-box;\n\n  font-weight: 500;\n  font-size: 14px;\n  height: 36px;\n  letter-spacing: 0.25px;\n  line-height: 16px;\n  padding: 9px 24px 11px 24px;\n  background: #1a73e8 none;\n  color: #fff;\n\n  margin-left: 12px;\n\n  &:hover {\n    border: 1px solid transparent;\n    background-color: #2b7de9;\n  }\n`;\n\nfunction LinkEditPopover({\n  text: _text = '',\n  url: _url = '',\n  buttonText = 'Apply',\n  onApply\n}) {\n  const [text, setText] = useState(_text);\n  const [url, setUrl] = useState(_url);\n  const textId = _.uniqueId('text_');\n  const linkId = _.uniqueId('link_');\n\n  return (\n    <Paper>\n      <TextFieldContainer>\n        <TextFieldInner>\n          <Label htmlFor={textId}>Text</Label>\n          <TextField\n            autoFocus\n            id={textId}\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n          />\n        </TextFieldInner>\n      </TextFieldContainer>\n      <TextFieldContainer style={{ paddingTop: 12 }}>\n        <TextFieldInner style={{ display: 'flex' }}>\n          <Label htmlFor={linkId}>Link</Label>\n          <TextField\n            id={linkId}\n            value={url}\n            onChange={(e) => setUrl(e.target.value)}\n          />\n          <Button onClick={() => onApply({ text, url })}>{buttonText}</Button>\n        </TextFieldInner>\n      </TextFieldContainer>\n    </Paper>\n  );\n}\n\nexport default LinkEditPopover;\n","import filter from './filter';\n\nfunction isLinkAtPos(pos) {\n  return (state) => {\n    const node = state.doc.nodeAt(pos);\n    return !!node && state.schema.marks.link.isInSet(node.marks);\n  };\n}\n\nfunction setLinkText(text, pos, to) {\n  return filter(isLinkAtPos(pos), (state, dispatch) => {\n    const $pos = state.doc.resolve(pos);\n    const node = state.doc.nodeAt(pos);\n    const mark = state.schema.marks.link.isInSet(node.marks);\n    if (node && text.length > 0 && text !== node.text) {\n      const rightBound =\n        to && pos !== to ? to : pos - $pos.textOffset + node.nodeSize;\n      const { tr } = state;\n\n      tr.insertText(text, pos, rightBound);\n      tr.addMark(pos, pos + text.length, mark);\n\n      if (dispatch) {\n        dispatch(tr);\n      }\n      return true;\n    }\n    return false;\n  });\n}\n\nexport default setLinkText;\n","import { DIALOG_MOBILE_SIZE } from './config';\n\nexport function isMobileView() {\n  return window.screen.width < DIALOG_MOBILE_SIZE;\n}\n","export const DIALOG_MOBILE_SIZE = 510;\nexport const DIALOG_ASK_URL = 'Enter the URL of the link:';\nexport const DIALOG_ASK_TEXT = 'Enter the TEXT of the link:';\n","import React from 'react';\nimport copy from 'copy-to-clipboard';\nimport PopoverManager from '../../PopoverManager';\nimport LinkPopover from './components/LinkPopover';\nimport setLinkHref from './setLinkHref';\nimport LinkEditPopover from './components/LinkEditPopover';\nimport setLinkText from './setLinkText';\nimport { DIALOG_ASK_URL } from './config';\nimport getActiveLinkMark from './getActiveLinkMark';\n\nimport { isMobileView } from './utils';\nimport styles from './LinkPlugin.module.css';\n\nfunction onLinkClick(editorView, _pos, event) {\n  const { target } = event;\n  if (target) {\n    const hyperlinkElement = target.closest(`.${styles.blockLink}`);\n    if (hyperlinkElement) {\n      const mark = getActiveLinkMark(editorView.state);\n      if (mark) {\n        const url = hyperlinkElement.getAttribute('href');\n        const text = hyperlinkElement.innerText;\n        PopoverManager.setPopoverAnchorElement(hyperlinkElement);\n        PopoverManager.setPopoverContent(\n          <LinkPopover\n            url={url}\n            onEditLink={() => {\n              if (isMobileView()) {\n                const answeredUrl = window.prompt(DIALOG_ASK_URL, url);\n                if (answeredUrl) {\n                  setLinkHref(answeredUrl, mark.pos)(\n                    editorView.state,\n                    editorView.dispatch\n                  );\n                }\n              } else {\n                PopoverManager.setPopoverContent(\n                  <LinkEditPopover\n                    url={url}\n                    text={text}\n                    onApply={({ text, url }) => {\n                      setLinkHref(url, mark.pos)(\n                        editorView.state,\n                        editorView.dispatch\n                      );\n                      setLinkText(text, mark.pos)(\n                        editorView.state,\n                        editorView.dispatch\n                      );\n                      PopoverManager.closePopover();\n                    }}\n                  />\n                );\n              }\n            }}\n            onCopyLink={() => {\n              copy(url);\n              PopoverManager.closePopover();\n            }}\n            onRemoveLink={() => {\n              setLinkHref('', mark.pos)(editorView.state, editorView.dispatch);\n              PopoverManager.closePopover();\n            }}\n          />\n        );\n      }\n    }\n  }\n}\n\nexport default onLinkClick;\n","function isSelectionInsideLink(state) {\n  return !!state.doc.type.schema.marks.link.isInSet(\n    state.selection.$from.marks()\n  );\n}\n\nfunction isSelectionAroundLink(state) {\n  const { selection } = state;\n  const { $from, $to } = selection;\n  const node = $from.nodeAfter;\n  return (\n    !!node &&\n    $from.textOffset === 0 &&\n    $to.pos - $from.pos === node.nodeSize &&\n    !!state.doc.type.schema.marks.link.isInSet(node.marks)\n  );\n}\n\nfunction getActiveLinkMark(state) {\n  const { $from } = state.selection;\n  if (isSelectionInsideLink(state) || isSelectionAroundLink(state)) {\n    const pos = $from.pos - $from.textOffset;\n    const node = state.doc.nodeAt(pos);\n    return node && node.isText ? { node, pos } : undefined;\n  }\n  return undefined;\n}\n\nexport default getActiveLinkMark;\n","import filter from '../../filter';\n\nfunction canLinkBeCreatedInRange(from, to) {\n  return (state) => {\n    if (!state.doc.rangeHasMark(from, to, state.schema.marks.link)) {\n      const $from = state.doc.resolve(from);\n      const $to = state.doc.resolve(to);\n      const link = state.schema.marks.link;\n      if ($from.parent === $to.parent && $from.parent.isTextblock) {\n        if ($from.parent.type.allowsMarkType(link)) {\n          let allowed = true;\n          state.doc.nodesBetween(from, to, (node) => {\n            allowed = allowed && !node.marks.some((m) => m.type.excludes(link));\n            return allowed;\n          });\n          return allowed;\n        }\n      }\n    }\n    return false;\n  };\n}\n\nfunction insertLink(from, href, text) {\n  return filter(canLinkBeCreatedInRange(from, from), (state, dispatch) => {\n    const link = state.schema.marks.link;\n    if (href.trim()) {\n      const { tr } = state;\n      const textContent = text || href;\n      tr.insertText(textContent, from, from);\n      tr.addMark(from, from + textContent.length, link.create({ href }));\n\n      if (dispatch) {\n        dispatch(tr.scrollIntoView());\n      }\n      return true;\n    }\n    return false;\n  });\n}\n\nexport default insertLink;\n","import React from 'react';\nimport { MdInsertLink } from 'react-icons/md';\nimport ToolbarButtonStyle from '../../../shared/ToolbarButtonStyle';\nimport LinkEditPopover from '../LinkEditPopover';\n\nimport PopoverManager from '../../../../PopoverManager';\nimport setLinkHref from '../../setLinkHref';\nimport setLinkText from '../../setLinkText';\nimport { isMobileView } from '../../utils';\nimport { DIALOG_ASK_TEXT, DIALOG_ASK_URL } from '../../config';\nimport insertLink from './insertLink';\n\nfunction getSelectedText(state, from, to) {\n  const selectedNode = state.doc.cut(from, to);\n  const selectedFragment = selectedNode.content;\n\n  return selectedFragment.content.map((e) => e.textContent).join('');\n}\n\nfunction getSelectedLink(state, pos) {\n  const node = state.doc.nodeAt(pos);\n  const { link } = state.schema.marks;\n  const mark = link.isInSet(node.marks);\n  if (mark && mark.attrs) {\n    return mark.attrs.href;\n  }\n  return '';\n}\n\nfunction LinkToolbarButton({ editorView, toolbarButtonDom }) {\n  return (\n    <ToolbarButtonStyle\n      onClick={(event) => {\n        event.preventDefault();\n\n        // toggle\n        if (PopoverManager.getAnchorEl() === toolbarButtonDom) {\n          PopoverManager.closePopover();\n        } else {\n          let text = '';\n          let url = '';\n          const { from, to } = editorView.state.selection;\n          const isInsertMode = from === to;\n          if (!isInsertMode) {\n            text = getSelectedText(editorView.state, from, to);\n            url = getSelectedLink(editorView.state, from);\n          }\n\n          const buttonText = isInsertMode ? 'Insert' : 'Update';\n\n          if (isMobileView()) {\n            if (isInsertMode) {\n              const answeredText = window.prompt(DIALOG_ASK_TEXT, text);\n              if (answeredText) {\n                const answeredUrl = window.prompt(DIALOG_ASK_URL, url);\n                if (answeredUrl) {\n                  insertLink(\n                    from,\n                    answeredUrl,\n                    answeredText\n                  )(editorView.state, editorView.dispatch);\n                }\n              }\n            } else {\n              const answeredUrl = window.prompt(DIALOG_ASK_URL, url);\n              if (answeredUrl) {\n                setLinkHref(\n                  answeredUrl,\n                  from,\n                  to\n                )(editorView.state, editorView.dispatch);\n              }\n            }\n          } else {\n            PopoverManager.setPopoverAnchorElement(toolbarButtonDom);\n            PopoverManager.setPopoverContent(\n              <LinkEditPopover\n                text={text}\n                url={url}\n                buttonText={buttonText}\n                onApply={({ text, url }) => {\n                  if (isInsertMode) {\n                    insertLink(\n                      from,\n                      url,\n                      text\n                    )(editorView.state, editorView.dispatch);\n                  } else {\n                    setLinkHref(\n                      url,\n                      from,\n                      to\n                    )(editorView.state, editorView.dispatch);\n                    setLinkText(\n                      text,\n                      from,\n                      to\n                    )(editorView.state, editorView.dispatch);\n                  }\n                  PopoverManager.closePopover();\n                }}\n              />\n            );\n          }\n        }\n      }}\n    >\n      <MdInsertLink />\n    </ToolbarButtonStyle>\n  );\n}\n\nexport default LinkToolbarButton;\n","import React from 'react';\nimport { Plugin } from 'prosemirror-state';\nimport ReactDOM from 'react-dom';\n\nimport mark from './mark';\nimport onLinkClick from './onLinkClick';\nimport LinkToolbarButton from './components/LinkToolbarButton';\n\nclass View {\n  constructor(editorView) {\n    this.dom = this.toolbarButtonDom = document.createElement('div');\n    this.renderReactComponent(editorView);\n  }\n\n  renderReactComponent(editorView) {\n    ReactDOM.render(\n      <LinkToolbarButton\n        toolbarButtonDom={this.toolbarButtonDom}\n        editorView={editorView}\n      />,\n      this.toolbarButtonDom\n    );\n  }\n\n  update(editorView) {\n    this.renderReactComponent(editorView);\n  }\n\n  destroy() {\n    this.toolbarButtonDom.remove();\n  }\n}\n\nfunction LinkPlugin(toolbarDom) {\n  return new Plugin({\n    view(editorView) {\n      const view = new View(editorView, toolbarDom);\n      toolbarDom.append(view.dom);\n      return view;\n    },\n    update() {\n      return true;\n    },\n    mark,\n    props: {\n      handleClick: onLinkClick\n    }\n  });\n}\n\nexport default LinkPlugin;\n","import { Plugin, PluginKey } from 'prosemirror-state';\nimport { Decoration, DecorationSet } from 'prosemirror-view';\nimport styles from './CursorPlugin.module.css';\n\nconst pluginKey = new PluginKey('CursorPlugin');\nconst DECORATION_ID = 'CursorDecoration_id';\nconst ZeroWidthSpace = '\\u200b';\n\nfunction getCursorDecoration(doc, position) {\n  const span = document.createElement('span');\n  span.textContent = ZeroWidthSpace;\n  span.className = styles.cursor;\n\n  return Decoration.widget(position, span, {\n    id: DECORATION_ID\n  });\n}\n\nfunction getNodeSpellCheckDecoration(doc, position) {\n  let decoration;\n  doc.nodesBetween(position, position, function (node, pos) {\n    if (node.isBlock) {\n      const attribute = {\n        'data-gramm': false,\n        spellcheck: false\n      };\n      decoration = Decoration.node(pos, pos + node.nodeSize, attribute, {\n        id: DECORATION_ID\n      });\n    }\n  });\n  return decoration;\n}\n\nfunction CursorPlugin() {\n  return new Plugin({\n    key: pluginKey,\n    state: {\n      init() {\n        return DecorationSet.empty;\n      },\n      apply(tr, set) {\n        const data = tr.getMeta(pluginKey);\n\n        if (!data) return set;\n\n        const { selection, doc, mapping } = tr;\n        const { from, to } = selection;\n        set = set.map(mapping, doc);\n\n        if (data.type === 'open') {\n          if (from === to) {\n            set = set.add(doc, [\n              getCursorDecoration(doc, selection.head),\n              getNodeSpellCheckDecoration(doc, selection.head)\n            ]);\n          }\n        } else if (data.type === 'close') {\n          const decorations = set.find(null, null, (e) => {\n            return e.id === DECORATION_ID;\n          });\n          set = set.remove(decorations);\n        }\n        return set;\n      }\n    },\n    props: {\n      decorations(state) {\n        return this.getState(state);\n      },\n      handleDOMEvents: {\n        blur: function (editorView) {\n          editorView.dispatch(\n            editorView.state.tr.setMeta(pluginKey, { type: 'open' })\n          );\n          return false;\n        },\n        focus: function (editorView) {\n          editorView.dispatch(\n            editorView.state.tr.setMeta(pluginKey, { type: 'close' })\n          );\n          return false;\n        }\n      }\n    }\n  });\n}\n\nexport default CursorPlugin;\n","const nodes = {\n  doc: {\n    content: 'block+'\n  },\n  paragraph: {\n    content: 'inline*',\n    group: 'block',\n    parseDOM: [{ tag: 'p' }],\n    toDOM: function toDOM() {\n      return ['p', 0];\n    }\n  },\n  heading: {\n    attrs: { level: { default: 1 } },\n    content: 'inline*',\n    group: 'block',\n    defining: true,\n    parseDOM: [\n      { tag: 'h1', attrs: { level: 1 } },\n      { tag: 'h2', attrs: { level: 2 } },\n      { tag: 'h3', attrs: { level: 3 } },\n      { tag: 'h4', attrs: { level: 4 } },\n      { tag: 'h5', attrs: { level: 5 } },\n      { tag: 'h6', attrs: { level: 6 } }\n    ],\n    toDOM(node) {\n      return ['h' + node.attrs.level, 0];\n    }\n  },\n  text: {\n    group: 'inline',\n    inline: true\n  }\n};\n\nexport default nodes;\n","function marks(plugins = []) {\n  return plugins\n    .map(({ spec }) => spec.mark)\n    .filter((e) => !!e)\n    .reduce((prev, cur) => {\n      prev = { ...prev, ...cur };\n      return prev;\n    }, {});\n}\n\nexport default marks;\n","export default function normaliseValue(value) {\n  const DEFAULT_VALUE = [{ type: 'paragraph' }];\n  if (value === undefined || value === null) {\n    return DEFAULT_VALUE;\n  } else if (Array.isArray(value) && value.length === 0) {\n    return DEFAULT_VALUE;\n  }\n  return value;\n}\n","import styled from 'styled-components';\n\nconst ProseMirrorStyle = styled.div`\n  .ProseMirror {\n    position: relative;\n    word-wrap: break-word;\n    white-space: pre-wrap;\n    -webkit-font-variant-ligatures: none;\n    font-variant-ligatures: none;\n  }\n\n  .ProseMirror pre {\n    white-space: pre-wrap;\n  }\n\n  .ProseMirror li {\n    position: relative;\n  }\n\n  .ProseMirror-hideselection *::selection {\n    background: transparent;\n  }\n  .ProseMirror-hideselection *::-moz-selection {\n    background: transparent;\n  }\n  .ProseMirror-hideselection {\n    caret-color: transparent;\n  }\n\n  .ProseMirror-selectednode {\n    outline: 2px solid #8cf;\n  }\n\n  /* Make sure li selections wrap around markers */\n\n  li.ProseMirror-selectednode {\n    outline: none;\n  }\n\n  li.ProseMirror-selectednode:after {\n    content: '';\n    position: absolute;\n    left: -32px;\n    right: -2px;\n    top: -2px;\n    bottom: -2px;\n    border: 2px solid #8cf;\n    pointer-events: none;\n  }\n  .ProseMirror-textblock-dropdown {\n    min-width: 3em;\n  }\n\n  .ProseMirror-menu {\n    margin: 0 -4px;\n    line-height: 1;\n  }\n\n  .ProseMirror-tooltip .ProseMirror-menu {\n    width: fit-content;\n    white-space: pre;\n  }\n\n  .ProseMirror-menuitem {\n    margin-right: 3px;\n    display: inline-block;\n  }\n\n  .ProseMirror-menuseparator {\n    border-right: 1px solid #ddd;\n    margin-right: 3px;\n  }\n\n  .ProseMirror-menu-dropdown,\n  .ProseMirror-menu-dropdown-menu {\n    font-size: 90%;\n    white-space: nowrap;\n  }\n\n  .ProseMirror-menu-dropdown {\n    vertical-align: 1px;\n    cursor: pointer;\n    position: relative;\n    padding-right: 15px;\n  }\n\n  .ProseMirror-menu-dropdown-wrap {\n    padding: 1px 0 1px 4px;\n    display: inline-block;\n    position: relative;\n  }\n\n  .ProseMirror-menu-dropdown:after {\n    content: '';\n    border-left: 4px solid transparent;\n    border-right: 4px solid transparent;\n    border-top: 4px solid currentColor;\n    opacity: 0.6;\n    position: absolute;\n    right: 4px;\n    top: calc(50% - 2px);\n  }\n\n  .ProseMirror-menu-dropdown-menu,\n  .ProseMirror-menu-submenu {\n    position: absolute;\n    background: white;\n    color: #666;\n    border: 1px solid #aaa;\n    padding: 2px;\n  }\n\n  .ProseMirror-menu-dropdown-menu {\n    z-index: 15;\n    min-width: 6em;\n  }\n\n  .ProseMirror-menu-dropdown-item {\n    cursor: pointer;\n    padding: 2px 8px 2px 4px;\n  }\n\n  .ProseMirror-menu-dropdown-item:hover {\n    background: #f2f2f2;\n  }\n\n  .ProseMirror-menu-submenu-wrap {\n    position: relative;\n    margin-right: -4px;\n  }\n\n  .ProseMirror-menu-submenu-label:after {\n    content: '';\n    border-top: 4px solid transparent;\n    border-bottom: 4px solid transparent;\n    border-left: 4px solid currentColor;\n    opacity: 0.6;\n    position: absolute;\n    right: 4px;\n    top: calc(50% - 4px);\n  }\n\n  .ProseMirror-menu-submenu {\n    display: none;\n    min-width: 4em;\n    left: 100%;\n    top: -3px;\n  }\n\n  .ProseMirror-menu-active {\n    background: #eee;\n    border-radius: 4px;\n  }\n\n  .ProseMirror-menu-active {\n    background: #eee;\n    border-radius: 4px;\n  }\n\n  .ProseMirror-menu-disabled {\n    opacity: 0.3;\n  }\n\n  .ProseMirror-menu-submenu-wrap:hover .ProseMirror-menu-submenu,\n  .ProseMirror-menu-submenu-wrap-active .ProseMirror-menu-submenu {\n    display: block;\n  }\n\n  .ProseMirror-menubar {\n    border-top-left-radius: inherit;\n    border-top-right-radius: inherit;\n    position: relative;\n    min-height: 1em;\n    color: #666;\n    padding: 1px 6px;\n    top: 0;\n    left: 0;\n    right: 0;\n    border-bottom: 1px solid silver;\n    background: white;\n    z-index: 10;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    overflow: visible;\n  }\n\n  .ProseMirror-icon {\n    display: inline-block;\n    line-height: 0.8;\n    vertical-align: -2px; /* Compensate for padding */\n    padding: 2px 8px;\n    cursor: pointer;\n  }\n\n  .ProseMirror-menu-disabled.ProseMirror-icon {\n    cursor: default;\n  }\n\n  .ProseMirror-icon svg {\n    fill: currentColor;\n    height: 1em;\n  }\n\n  .ProseMirror-icon span {\n    vertical-align: text-top;\n  }\n  .ProseMirror-gapcursor {\n    display: none;\n    pointer-events: none;\n    position: absolute;\n  }\n\n  .ProseMirror-gapcursor:after {\n    content: '';\n    display: block;\n    position: absolute;\n    top: -2px;\n    width: 20px;\n    border-top: 1px solid black;\n    animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;\n  }\n\n  @keyframes ProseMirror-cursor-blink {\n    to {\n      visibility: hidden;\n    }\n  }\n\n  .ProseMirror-focused .ProseMirror-gapcursor {\n    display: block;\n  }\n  /* Add space around the hr to make clicking it easier */\n\n  .ProseMirror-example-setup-style hr {\n    padding: 2px 10px;\n    border: none;\n    margin: 1em 0;\n  }\n\n  .ProseMirror-example-setup-style hr:after {\n    content: '';\n    display: block;\n    height: 1px;\n    background-color: silver;\n    line-height: 2px;\n  }\n\n  .ProseMirror ul,\n  .ProseMirror ol {\n    padding-left: 30px;\n  }\n\n  .ProseMirror blockquote {\n    padding-left: 1em;\n    border-left: 3px solid #eee;\n    margin-left: 0;\n    margin-right: 0;\n  }\n\n  .ProseMirror-example-setup-style img {\n    cursor: default;\n  }\n\n  .ProseMirror-prompt {\n    background: white;\n    padding: 5px 10px 5px 15px;\n    border: 1px solid silver;\n    position: fixed;\n    border-radius: 3px;\n    z-index: 11;\n    box-shadow: -0.5px 2px 5px rgba(0, 0, 0, 0.2);\n  }\n\n  .ProseMirror-prompt h5 {\n    margin: 0;\n    font-weight: normal;\n    font-size: 100%;\n    color: #444;\n  }\n\n  .ProseMirror-prompt input[type='text'],\n  .ProseMirror-prompt textarea {\n    background: #eee;\n    border: none;\n    outline: none;\n  }\n\n  .ProseMirror-prompt input[type='text'] {\n    padding: 0 4px;\n  }\n\n  .ProseMirror-prompt-close {\n    position: absolute;\n    left: 2px;\n    top: 1px;\n    color: #666;\n    border: none;\n    background: transparent;\n    padding: 0;\n  }\n\n  .ProseMirror-prompt-close:after {\n    content: 'âœ•';\n    font-size: 12px;\n  }\n\n  .ProseMirror-invalid {\n    background: #ffc;\n    border: 1px solid #cc7;\n    border-radius: 4px;\n    padding: 5px 10px;\n    position: absolute;\n    min-width: 10em;\n  }\n\n  .ProseMirror-prompt-buttons {\n    margin-top: 5px;\n    display: none;\n  }\n  #editor,\n  .editor {\n    background: white;\n    color: black;\n    background-clip: padding-box;\n    border-radius: 4px;\n    border: 2px solid rgba(0, 0, 0, 0.2);\n    padding: 5px 0;\n    margin-bottom: 23px;\n  }\n\n  .ProseMirror p:first-child,\n  .ProseMirror h1:first-child,\n  .ProseMirror h2:first-child,\n  .ProseMirror h3:first-child,\n  .ProseMirror h4:first-child,\n  .ProseMirror h5:first-child,\n  .ProseMirror h6:first-child {\n    margin-top: 10px;\n  }\n\n  .ProseMirror {\n    padding: 4px 8px 4px 24px;\n    line-height: 1.2;\n    outline: none;\n  }\n\n  .ProseMirror p {\n    margin-bottom: 1em;\n  }\n`;\nexport default ProseMirrorStyle;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Schema } from 'prosemirror-model';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { EditorState } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Popover from './components/Popover';\nimport plugins from './plugins';\nimport nodes from './nodes';\nimport marks from './marks';\nimport PopoverManager from './PopoverManager';\nimport normaliseValue from './normaliseValue';\nimport ProseMirrorStyle from './ProseMirrorStyle';\n\nconst Toolbar = styled.div`\n  padding: 4px 8px 4px 14px;\n  position: sticky;\n  top: 0;\n  background-color: white;\n  z-index: 1;\n  width: 100%;\n  flex-wrap: nowrap;\n  overflow-x: auto;\n  display: flex;\n  flex: 0 0 auto;\n  flex-shrink: 0;\n`;\n\nfunction Aditor({ id, defaultValue, onChange }) {\n  if (!id) {\n    throw new Error('The id is required to use Aditor');\n  }\n  const editor = useRef(null);\n  const toolbar = useRef(null);\n  const [editorView, setEditorView] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [popoverContent, setPopoverContent] = useState(null);\n\n  PopoverManager.setPopoverAnchorElement = setAnchorEl;\n  PopoverManager.setPopoverContent = setPopoverContent;\n  PopoverManager.setAnchorEl(anchorEl);\n  PopoverManager.setEditorView(editorView);\n\n  const init = useCallback(() => {\n    if (!editorView) {\n      const _plugins = plugins(toolbar.current);\n      const schema = new Schema({ nodes, marks: marks(_plugins) });\n      const doc = schema.nodeFromJSON({\n        type: 'doc',\n        content: normaliseValue(defaultValue)\n      });\n      const state = EditorState.create({\n        doc,\n        plugins: _plugins\n      });\n      const _editorView = new EditorView(editor.current, {\n        state,\n        dispatchTransaction(transaction) {\n          const newState = _editorView.state.apply(transaction);\n          _editorView.updateState(newState);\n          onChange(newState.toJSON().doc.content);\n        }\n      });\n      setEditorView(_editorView);\n    }\n  }, [defaultValue, onChange, editorView]);\n\n  useEffect(() => {\n    init();\n  }, [init]);\n\n  return (\n    <CssBaseline>\n      <Paper>\n        <Toolbar ref={toolbar} onMouseDown={(e) => e.preventDefault()} />\n        <Divider light />\n        <ProseMirrorStyle id={id} ref={editor} />\n        {editorView && (\n          <Popover id={`popover_${id}`} anchorEl={anchorEl}>\n            {popoverContent}\n          </Popover>\n        )}\n      </Paper>\n    </CssBaseline>\n  );\n}\n\nAditor.defaultProps = {\n  defaultValue: [],\n  onChange: () => {}\n};\n\nAditor.propTypes = {\n  id: PropTypes.string.isRequired,\n  defaultValue: PropTypes.array,\n  onChange: PropTypes.func\n};\n\nexport default Aditor;\n","import { history } from 'prosemirror-history';\nimport { keymap } from 'prosemirror-keymap';\nimport { baseKeymap } from 'prosemirror-commands';\nimport { dropCursor } from 'prosemirror-dropcursor';\nimport { gapCursor } from 'prosemirror-gapcursor';\nimport HighlightPlugin from './HighlightPlugin';\nimport UndoPlugin from './UndoPlugin';\nimport RedoPlugin from './RedoPlugin';\nimport BoldPlugin from './BoldPlugin';\nimport ItalicPlugin from './ItalicPlugin';\nimport UnderlinePlugin from './UnderlinePlugin';\nimport StrikeThroughPlugin from './StrikeThroughPlugin';\nimport TextColorPlugin from './TextColorPlugin';\nimport HeadingPlugin from './HeadingPlugin';\nimport LinkPlugin from './LinkPlugin';\nimport CursorPlugin from './CursorPlugin';\n\nfunction plugins(toolbarDom) {\n  return [\n    CursorPlugin(),\n    HighlightPlugin(),\n    history(),\n    keymap(baseKeymap),\n    dropCursor(),\n    gapCursor(),\n    UndoPlugin(toolbarDom),\n    RedoPlugin(toolbarDom),\n    HeadingPlugin(toolbarDom),\n    BoldPlugin(toolbarDom),\n    ItalicPlugin(toolbarDom),\n    UnderlinePlugin(toolbarDom),\n    StrikeThroughPlugin(toolbarDom),\n    LinkPlugin(toolbarDom),\n    TextColorPlugin(toolbarDom)\n  ];\n}\n\nexport default plugins;\n","import React from 'react';\nimport Aditor from 'aditor';\nimport 'aditor/dist/index.css';\n\nconst App = () => {\n  const [value, setValue] = React.useState([{\"type\":\"heading\",\"attrs\":{\"level\":1},\"content\":[{\"type\":\"text\",\"text\":\"Heading1\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":2},\"content\":[{\"type\":\"text\",\"text\":\"Heading2\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":3},\"content\":[{\"type\":\"text\",\"text\":\"Heading3\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":4},\"content\":[{\"type\":\"text\",\"text\":\"Heading4\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":5},\"content\":[{\"type\":\"text\",\"text\":\"Heading5\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":6},\"content\":[{\"type\":\"text\",\"text\":\"Heading6\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Normal Text\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"strong\"}],\"text\":\"Bold\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"em\"}],\"text\":\"Italic\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"u\"}],\"text\":\"Underline\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"del\"}],\"text\":\"StrikeThrough\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"textColor\",\"attrs\":{\"color\":\"#f44e3b\"}}],\"text\":\"Red\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"link\",\"attrs\":{\"href\":\"https://www.nhs.uk\",\"title\":null}}],\"text\":\"NHS\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":1},\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"link\",\"attrs\":{\"href\":\"https://www.google.com.tw\",\"title\":null}},{\"type\":\"strong\"},{\"type\":\"em\"},{\"type\":\"u\"},{\"type\":\"del\"},{\"type\":\"textColor\",\"attrs\":{\"color\":\"#f44e3b\"}}],\"text\":\"All combined\"}]}]);\n\n  return (\n    <div className=\"App\">\n      <Aditor id=\"aditor\" defaultValue={value} onChange={value=>{\n        setValue(value);\n      }} />\n      {JSON.stringify(value)}\n    </div>\n  );\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}